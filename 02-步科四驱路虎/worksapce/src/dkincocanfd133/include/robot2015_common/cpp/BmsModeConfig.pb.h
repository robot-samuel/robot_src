// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BmsModeConfig.proto

#ifndef PROTOBUF_BmsModeConfig_2eproto__INCLUDED
#define PROTOBUF_BmsModeConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BmsModeConfig_2eproto();
void protobuf_AssignDesc_BmsModeConfig_2eproto();
void protobuf_ShutdownFile_BmsModeConfig_2eproto();

class BmsModeConfig;
class BmsModeConfig_SOC_Config;
class BmsModeConfig_Fan_Config;
class BmsModeConfig_Nomal_Config;

// ===================================================================

class BmsModeConfig_SOC_Config : public ::google::protobuf::Message {
 public:
  BmsModeConfig_SOC_Config();
  virtual ~BmsModeConfig_SOC_Config();

  BmsModeConfig_SOC_Config(const BmsModeConfig_SOC_Config& from);

  inline BmsModeConfig_SOC_Config& operator=(const BmsModeConfig_SOC_Config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsModeConfig_SOC_Config& default_instance();

  void Swap(BmsModeConfig_SOC_Config* other);

  // implements Message ----------------------------------------------

  BmsModeConfig_SOC_Config* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BmsModeConfig_SOC_Config& from);
  void MergeFrom(const BmsModeConfig_SOC_Config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Full_Soc = 1;
  inline bool has_full_soc() const;
  inline void clear_full_soc();
  static const int kFullSocFieldNumber = 1;
  inline ::google::protobuf::int32 full_soc() const;
  inline void set_full_soc(::google::protobuf::int32 value);

  // optional int32 Current_Soc = 2;
  inline bool has_current_soc() const;
  inline void clear_current_soc();
  static const int kCurrentSocFieldNumber = 2;
  inline ::google::protobuf::int32 current_soc() const;
  inline void set_current_soc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BmsModeConfig.SOC_Config)
 private:
  inline void set_has_full_soc();
  inline void clear_has_full_soc();
  inline void set_has_current_soc();
  inline void clear_has_current_soc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 full_soc_;
  ::google::protobuf::int32 current_soc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BmsModeConfig_2eproto();
  friend void protobuf_AssignDesc_BmsModeConfig_2eproto();
  friend void protobuf_ShutdownFile_BmsModeConfig_2eproto();

  void InitAsDefaultInstance();
  static BmsModeConfig_SOC_Config* default_instance_;
};
// -------------------------------------------------------------------

class BmsModeConfig_Fan_Config : public ::google::protobuf::Message {
 public:
  BmsModeConfig_Fan_Config();
  virtual ~BmsModeConfig_Fan_Config();

  BmsModeConfig_Fan_Config(const BmsModeConfig_Fan_Config& from);

  inline BmsModeConfig_Fan_Config& operator=(const BmsModeConfig_Fan_Config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsModeConfig_Fan_Config& default_instance();

  void Swap(BmsModeConfig_Fan_Config* other);

  // implements Message ----------------------------------------------

  BmsModeConfig_Fan_Config* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BmsModeConfig_Fan_Config& from);
  void MergeFrom(const BmsModeConfig_Fan_Config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 open = 1;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 1;
  inline ::google::protobuf::int32 open() const;
  inline void set_open(::google::protobuf::int32 value);

  // optional int32 close = 2;
  inline bool has_close() const;
  inline void clear_close();
  static const int kCloseFieldNumber = 2;
  inline ::google::protobuf::int32 close() const;
  inline void set_close(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BmsModeConfig.Fan_Config)
 private:
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_close();
  inline void clear_has_close();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 open_;
  ::google::protobuf::int32 close_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BmsModeConfig_2eproto();
  friend void protobuf_AssignDesc_BmsModeConfig_2eproto();
  friend void protobuf_ShutdownFile_BmsModeConfig_2eproto();

  void InitAsDefaultInstance();
  static BmsModeConfig_Fan_Config* default_instance_;
};
// -------------------------------------------------------------------

class BmsModeConfig_Nomal_Config : public ::google::protobuf::Message {
 public:
  BmsModeConfig_Nomal_Config();
  virtual ~BmsModeConfig_Nomal_Config();

  BmsModeConfig_Nomal_Config(const BmsModeConfig_Nomal_Config& from);

  inline BmsModeConfig_Nomal_Config& operator=(const BmsModeConfig_Nomal_Config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsModeConfig_Nomal_Config& default_instance();

  void Swap(BmsModeConfig_Nomal_Config* other);

  // implements Message ----------------------------------------------

  BmsModeConfig_Nomal_Config* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BmsModeConfig_Nomal_Config& from);
  void MergeFrom(const BmsModeConfig_Nomal_Config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Ctrl_charge = 1;
  inline bool has_ctrl_charge() const;
  inline void clear_ctrl_charge();
  static const int kCtrlChargeFieldNumber = 1;
  inline ::google::protobuf::int32 ctrl_charge() const;
  inline void set_ctrl_charge(::google::protobuf::int32 value);

  // optional int32 Ctrl_fan = 2;
  inline bool has_ctrl_fan() const;
  inline void clear_ctrl_fan();
  static const int kCtrlFanFieldNumber = 2;
  inline ::google::protobuf::int32 ctrl_fan() const;
  inline void set_ctrl_fan(::google::protobuf::int32 value);

  // optional int32 Ctrl_reset = 3;
  inline bool has_ctrl_reset() const;
  inline void clear_ctrl_reset();
  static const int kCtrlResetFieldNumber = 3;
  inline ::google::protobuf::int32 ctrl_reset() const;
  inline void set_ctrl_reset(::google::protobuf::int32 value);

  // optional int32 Alarm_release = 4;
  inline bool has_alarm_release() const;
  inline void clear_alarm_release();
  static const int kAlarmReleaseFieldNumber = 4;
  inline ::google::protobuf::int32 alarm_release() const;
  inline void set_alarm_release(::google::protobuf::int32 value);

  // optional int32 Ctrl_motor_power = 5;
  inline bool has_ctrl_motor_power() const;
  inline void clear_ctrl_motor_power();
  static const int kCtrlMotorPowerFieldNumber = 5;
  inline ::google::protobuf::int32 ctrl_motor_power() const;
  inline void set_ctrl_motor_power(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BmsModeConfig.Nomal_Config)
 private:
  inline void set_has_ctrl_charge();
  inline void clear_has_ctrl_charge();
  inline void set_has_ctrl_fan();
  inline void clear_has_ctrl_fan();
  inline void set_has_ctrl_reset();
  inline void clear_has_ctrl_reset();
  inline void set_has_alarm_release();
  inline void clear_has_alarm_release();
  inline void set_has_ctrl_motor_power();
  inline void clear_has_ctrl_motor_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ctrl_charge_;
  ::google::protobuf::int32 ctrl_fan_;
  ::google::protobuf::int32 ctrl_reset_;
  ::google::protobuf::int32 alarm_release_;
  ::google::protobuf::int32 ctrl_motor_power_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_BmsModeConfig_2eproto();
  friend void protobuf_AssignDesc_BmsModeConfig_2eproto();
  friend void protobuf_ShutdownFile_BmsModeConfig_2eproto();

  void InitAsDefaultInstance();
  static BmsModeConfig_Nomal_Config* default_instance_;
};
// -------------------------------------------------------------------

class BmsModeConfig : public ::google::protobuf::Message {
 public:
  BmsModeConfig();
  virtual ~BmsModeConfig();

  BmsModeConfig(const BmsModeConfig& from);

  inline BmsModeConfig& operator=(const BmsModeConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsModeConfig& default_instance();

  void Swap(BmsModeConfig* other);

  // implements Message ----------------------------------------------

  BmsModeConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BmsModeConfig& from);
  void MergeFrom(const BmsModeConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BmsModeConfig_SOC_Config SOC_Config;
  typedef BmsModeConfig_Fan_Config Fan_Config;
  typedef BmsModeConfig_Nomal_Config Nomal_Config;

  // accessors -------------------------------------------------------

  // optional .BmsModeConfig.Nomal_Config Nomal = 1;
  inline bool has_nomal() const;
  inline void clear_nomal();
  static const int kNomalFieldNumber = 1;
  inline const ::BmsModeConfig_Nomal_Config& nomal() const;
  inline ::BmsModeConfig_Nomal_Config* mutable_nomal();
  inline ::BmsModeConfig_Nomal_Config* release_nomal();
  inline void set_allocated_nomal(::BmsModeConfig_Nomal_Config* nomal);

  // optional .BmsModeConfig.SOC_Config SOC = 2;
  inline bool has_soc() const;
  inline void clear_soc();
  static const int kSOCFieldNumber = 2;
  inline const ::BmsModeConfig_SOC_Config& soc() const;
  inline ::BmsModeConfig_SOC_Config* mutable_soc();
  inline ::BmsModeConfig_SOC_Config* release_soc();
  inline void set_allocated_soc(::BmsModeConfig_SOC_Config* soc);

  // optional .BmsModeConfig.Fan_Config fan = 3;
  inline bool has_fan() const;
  inline void clear_fan();
  static const int kFanFieldNumber = 3;
  inline const ::BmsModeConfig_Fan_Config& fan() const;
  inline ::BmsModeConfig_Fan_Config* mutable_fan();
  inline ::BmsModeConfig_Fan_Config* release_fan();
  inline void set_allocated_fan(::BmsModeConfig_Fan_Config* fan);

  // @@protoc_insertion_point(class_scope:BmsModeConfig)
 private:
  inline void set_has_nomal();
  inline void clear_has_nomal();
  inline void set_has_soc();
  inline void clear_has_soc();
  inline void set_has_fan();
  inline void clear_has_fan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BmsModeConfig_Nomal_Config* nomal_;
  ::BmsModeConfig_SOC_Config* soc_;
  ::BmsModeConfig_Fan_Config* fan_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BmsModeConfig_2eproto();
  friend void protobuf_AssignDesc_BmsModeConfig_2eproto();
  friend void protobuf_ShutdownFile_BmsModeConfig_2eproto();

  void InitAsDefaultInstance();
  static BmsModeConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// BmsModeConfig_SOC_Config

// optional int32 Full_Soc = 1;
inline bool BmsModeConfig_SOC_Config::has_full_soc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BmsModeConfig_SOC_Config::set_has_full_soc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BmsModeConfig_SOC_Config::clear_has_full_soc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BmsModeConfig_SOC_Config::clear_full_soc() {
  full_soc_ = 0;
  clear_has_full_soc();
}
inline ::google::protobuf::int32 BmsModeConfig_SOC_Config::full_soc() const {
  return full_soc_;
}
inline void BmsModeConfig_SOC_Config::set_full_soc(::google::protobuf::int32 value) {
  set_has_full_soc();
  full_soc_ = value;
}

// optional int32 Current_Soc = 2;
inline bool BmsModeConfig_SOC_Config::has_current_soc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BmsModeConfig_SOC_Config::set_has_current_soc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BmsModeConfig_SOC_Config::clear_has_current_soc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BmsModeConfig_SOC_Config::clear_current_soc() {
  current_soc_ = 0;
  clear_has_current_soc();
}
inline ::google::protobuf::int32 BmsModeConfig_SOC_Config::current_soc() const {
  return current_soc_;
}
inline void BmsModeConfig_SOC_Config::set_current_soc(::google::protobuf::int32 value) {
  set_has_current_soc();
  current_soc_ = value;
}

// -------------------------------------------------------------------

// BmsModeConfig_Fan_Config

// optional int32 open = 1;
inline bool BmsModeConfig_Fan_Config::has_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BmsModeConfig_Fan_Config::set_has_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BmsModeConfig_Fan_Config::clear_has_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BmsModeConfig_Fan_Config::clear_open() {
  open_ = 0;
  clear_has_open();
}
inline ::google::protobuf::int32 BmsModeConfig_Fan_Config::open() const {
  return open_;
}
inline void BmsModeConfig_Fan_Config::set_open(::google::protobuf::int32 value) {
  set_has_open();
  open_ = value;
}

// optional int32 close = 2;
inline bool BmsModeConfig_Fan_Config::has_close() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BmsModeConfig_Fan_Config::set_has_close() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BmsModeConfig_Fan_Config::clear_has_close() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BmsModeConfig_Fan_Config::clear_close() {
  close_ = 0;
  clear_has_close();
}
inline ::google::protobuf::int32 BmsModeConfig_Fan_Config::close() const {
  return close_;
}
inline void BmsModeConfig_Fan_Config::set_close(::google::protobuf::int32 value) {
  set_has_close();
  close_ = value;
}

// -------------------------------------------------------------------

// BmsModeConfig_Nomal_Config

// optional int32 Ctrl_charge = 1;
inline bool BmsModeConfig_Nomal_Config::has_ctrl_charge() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BmsModeConfig_Nomal_Config::set_has_ctrl_charge() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BmsModeConfig_Nomal_Config::clear_has_ctrl_charge() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BmsModeConfig_Nomal_Config::clear_ctrl_charge() {
  ctrl_charge_ = 0;
  clear_has_ctrl_charge();
}
inline ::google::protobuf::int32 BmsModeConfig_Nomal_Config::ctrl_charge() const {
  return ctrl_charge_;
}
inline void BmsModeConfig_Nomal_Config::set_ctrl_charge(::google::protobuf::int32 value) {
  set_has_ctrl_charge();
  ctrl_charge_ = value;
}

// optional int32 Ctrl_fan = 2;
inline bool BmsModeConfig_Nomal_Config::has_ctrl_fan() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BmsModeConfig_Nomal_Config::set_has_ctrl_fan() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BmsModeConfig_Nomal_Config::clear_has_ctrl_fan() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BmsModeConfig_Nomal_Config::clear_ctrl_fan() {
  ctrl_fan_ = 0;
  clear_has_ctrl_fan();
}
inline ::google::protobuf::int32 BmsModeConfig_Nomal_Config::ctrl_fan() const {
  return ctrl_fan_;
}
inline void BmsModeConfig_Nomal_Config::set_ctrl_fan(::google::protobuf::int32 value) {
  set_has_ctrl_fan();
  ctrl_fan_ = value;
}

// optional int32 Ctrl_reset = 3;
inline bool BmsModeConfig_Nomal_Config::has_ctrl_reset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BmsModeConfig_Nomal_Config::set_has_ctrl_reset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BmsModeConfig_Nomal_Config::clear_has_ctrl_reset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BmsModeConfig_Nomal_Config::clear_ctrl_reset() {
  ctrl_reset_ = 0;
  clear_has_ctrl_reset();
}
inline ::google::protobuf::int32 BmsModeConfig_Nomal_Config::ctrl_reset() const {
  return ctrl_reset_;
}
inline void BmsModeConfig_Nomal_Config::set_ctrl_reset(::google::protobuf::int32 value) {
  set_has_ctrl_reset();
  ctrl_reset_ = value;
}

// optional int32 Alarm_release = 4;
inline bool BmsModeConfig_Nomal_Config::has_alarm_release() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BmsModeConfig_Nomal_Config::set_has_alarm_release() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BmsModeConfig_Nomal_Config::clear_has_alarm_release() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BmsModeConfig_Nomal_Config::clear_alarm_release() {
  alarm_release_ = 0;
  clear_has_alarm_release();
}
inline ::google::protobuf::int32 BmsModeConfig_Nomal_Config::alarm_release() const {
  return alarm_release_;
}
inline void BmsModeConfig_Nomal_Config::set_alarm_release(::google::protobuf::int32 value) {
  set_has_alarm_release();
  alarm_release_ = value;
}

// optional int32 Ctrl_motor_power = 5;
inline bool BmsModeConfig_Nomal_Config::has_ctrl_motor_power() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BmsModeConfig_Nomal_Config::set_has_ctrl_motor_power() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BmsModeConfig_Nomal_Config::clear_has_ctrl_motor_power() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BmsModeConfig_Nomal_Config::clear_ctrl_motor_power() {
  ctrl_motor_power_ = 0;
  clear_has_ctrl_motor_power();
}
inline ::google::protobuf::int32 BmsModeConfig_Nomal_Config::ctrl_motor_power() const {
  return ctrl_motor_power_;
}
inline void BmsModeConfig_Nomal_Config::set_ctrl_motor_power(::google::protobuf::int32 value) {
  set_has_ctrl_motor_power();
  ctrl_motor_power_ = value;
}

// -------------------------------------------------------------------

// BmsModeConfig

// optional .BmsModeConfig.Nomal_Config Nomal = 1;
inline bool BmsModeConfig::has_nomal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BmsModeConfig::set_has_nomal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BmsModeConfig::clear_has_nomal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BmsModeConfig::clear_nomal() {
  if (nomal_ != NULL) nomal_->::BmsModeConfig_Nomal_Config::Clear();
  clear_has_nomal();
}
inline const ::BmsModeConfig_Nomal_Config& BmsModeConfig::nomal() const {
  return nomal_ != NULL ? *nomal_ : *default_instance_->nomal_;
}
inline ::BmsModeConfig_Nomal_Config* BmsModeConfig::mutable_nomal() {
  set_has_nomal();
  if (nomal_ == NULL) nomal_ = new ::BmsModeConfig_Nomal_Config;
  return nomal_;
}
inline ::BmsModeConfig_Nomal_Config* BmsModeConfig::release_nomal() {
  clear_has_nomal();
  ::BmsModeConfig_Nomal_Config* temp = nomal_;
  nomal_ = NULL;
  return temp;
}
inline void BmsModeConfig::set_allocated_nomal(::BmsModeConfig_Nomal_Config* nomal) {
  delete nomal_;
  nomal_ = nomal;
  if (nomal) {
    set_has_nomal();
  } else {
    clear_has_nomal();
  }
}

// optional .BmsModeConfig.SOC_Config SOC = 2;
inline bool BmsModeConfig::has_soc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BmsModeConfig::set_has_soc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BmsModeConfig::clear_has_soc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BmsModeConfig::clear_soc() {
  if (soc_ != NULL) soc_->::BmsModeConfig_SOC_Config::Clear();
  clear_has_soc();
}
inline const ::BmsModeConfig_SOC_Config& BmsModeConfig::soc() const {
  return soc_ != NULL ? *soc_ : *default_instance_->soc_;
}
inline ::BmsModeConfig_SOC_Config* BmsModeConfig::mutable_soc() {
  set_has_soc();
  if (soc_ == NULL) soc_ = new ::BmsModeConfig_SOC_Config;
  return soc_;
}
inline ::BmsModeConfig_SOC_Config* BmsModeConfig::release_soc() {
  clear_has_soc();
  ::BmsModeConfig_SOC_Config* temp = soc_;
  soc_ = NULL;
  return temp;
}
inline void BmsModeConfig::set_allocated_soc(::BmsModeConfig_SOC_Config* soc) {
  delete soc_;
  soc_ = soc;
  if (soc) {
    set_has_soc();
  } else {
    clear_has_soc();
  }
}

// optional .BmsModeConfig.Fan_Config fan = 3;
inline bool BmsModeConfig::has_fan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BmsModeConfig::set_has_fan() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BmsModeConfig::clear_has_fan() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BmsModeConfig::clear_fan() {
  if (fan_ != NULL) fan_->::BmsModeConfig_Fan_Config::Clear();
  clear_has_fan();
}
inline const ::BmsModeConfig_Fan_Config& BmsModeConfig::fan() const {
  return fan_ != NULL ? *fan_ : *default_instance_->fan_;
}
inline ::BmsModeConfig_Fan_Config* BmsModeConfig::mutable_fan() {
  set_has_fan();
  if (fan_ == NULL) fan_ = new ::BmsModeConfig_Fan_Config;
  return fan_;
}
inline ::BmsModeConfig_Fan_Config* BmsModeConfig::release_fan() {
  clear_has_fan();
  ::BmsModeConfig_Fan_Config* temp = fan_;
  fan_ = NULL;
  return temp;
}
inline void BmsModeConfig::set_allocated_fan(::BmsModeConfig_Fan_Config* fan) {
  delete fan_;
  fan_ = fan;
  if (fan) {
    set_has_fan();
  } else {
    clear_has_fan();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BmsModeConfig_2eproto__INCLUDED
