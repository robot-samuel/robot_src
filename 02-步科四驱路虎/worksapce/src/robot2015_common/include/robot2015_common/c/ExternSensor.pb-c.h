/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ExternSensor.proto */

#ifndef PROTOBUF_C_ExternSensor_2eproto__INCLUDED
#define PROTOBUF_C_ExternSensor_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ExternSensor ExternSensor;
typedef struct _ExternSensor__ModeTempHumi ExternSensor__ModeTempHumi;
typedef struct _ExternSensor__ModeFan ExternSensor__ModeFan;
typedef struct _ExternSensor__ModePX24ES ExternSensor__ModePX24ES;


/* --- enums --- */


/* --- messages --- */

struct  _ExternSensor__ModeTempHumi
{
  ProtobufCMessage base;
  /*
   *机箱内部温度
   */
  protobuf_c_boolean has_interior_temp;
  int32_t interior_temp;
  /*
   *机箱内部湿度
   */
  protobuf_c_boolean has_interior_humi;
  int32_t interior_humi;
};
#define EXTERN_SENSOR__MODE__TEMP_HUMI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extern_sensor__mode__temp_humi__descriptor) \
    , 0,0, 0,0 }


struct  _ExternSensor__ModeFan
{
  ProtobufCMessage base;
  /*
   *模块ID
   */
  protobuf_c_boolean has_fan_id;
  int32_t fan_id;
  /*
   *运行模式  0-手动  1 自动
   */
  protobuf_c_boolean has_fan_mode;
  int32_t fan_mode;
  /*
   *运行状态  0-关闭  1 运转
   */
  protobuf_c_boolean has_fan_status;
  int32_t fan_status;
  /*
   *自动模式高温值
   */
  protobuf_c_boolean has_vaule_open;
  int32_t vaule_open;
  /*
   *自动模式低温值
   */
  protobuf_c_boolean has_vaule_close;
  int32_t vaule_close;
};
#define EXTERN_SENSOR__MODE_FAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extern_sensor__mode_fan__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _ExternSensor__ModePX24ES
{
  ProtobufCMessage base;
  /*
   *区域1
   */
  protobuf_c_boolean has_out1;
  int32_t out1;
  /*
   *区域2
   */
  protobuf_c_boolean has_out2;
  int32_t out2;
  /*
   *外部光干扰	
   */
  protobuf_c_boolean has_extraneouslight_out;
  int32_t extraneouslight_out;
};
#define EXTERN_SENSOR__MODE__PX24_ES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extern_sensor__mode__px24_es__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _ExternSensor
{
  ProtobufCMessage base;
  /*
   *pt100采集温度值
   */
  size_t n_temp_pt100;
  int32_t *temp_pt100;
  /*
   *温湿度传感器通道
   */
  size_t n_temp_humi;
  ExternSensor__ModeTempHumi **temp_humi;
  /*
   *风扇模块信息
   */
  size_t n_fan_msg;
  ExternSensor__ModeFan **fan_msg;
  /*
   *防跌落通道  0 正常 1 有悬空
   */
  size_t n_io_infrared;
  int32_t *io_infrared;
  /*
   *防碰撞通道  0 无 1 有障碍
   */
  size_t n_io_collision;
  int32_t *io_collision;
  /*
   *LED 状态 "LED_CLOSE" "LED_GREEN" "LED_RED" "LED_BLUE" "LED_GREEN_FLI" "LED_RED_FLI" "LED_BLUE_FLI"
   */
  char *led_status;
  /*
   *松下壁障传感器
   */
  ExternSensor__ModePX24ES *px24es;
  /*
   *模块是否连接在线 0 断开连接 1 在线
   */
  protobuf_c_boolean has_online;
  int32_t online;
};
#define EXTERN_SENSOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extern_sensor__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, NULL, NULL, 0,0 }


/* ExternSensor__ModeTempHumi methods */
void   extern_sensor__mode__temp_humi__init
                     (ExternSensor__ModeTempHumi         *message);
/* ExternSensor__ModeFan methods */
void   extern_sensor__mode_fan__init
                     (ExternSensor__ModeFan         *message);
/* ExternSensor__ModePX24ES methods */
void   extern_sensor__mode__px24_es__init
                     (ExternSensor__ModePX24ES         *message);
/* ExternSensor methods */
void   extern_sensor__init
                     (ExternSensor         *message);
size_t extern_sensor__get_packed_size
                     (const ExternSensor   *message);
size_t extern_sensor__pack
                     (const ExternSensor   *message,
                      uint8_t             *out);
size_t extern_sensor__pack_to_buffer
                     (const ExternSensor   *message,
                      ProtobufCBuffer     *buffer);
ExternSensor *
       extern_sensor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   extern_sensor__free_unpacked
                     (ExternSensor *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ExternSensor__ModeTempHumi_Closure)
                 (const ExternSensor__ModeTempHumi *message,
                  void *closure_data);
typedef void (*ExternSensor__ModeFan_Closure)
                 (const ExternSensor__ModeFan *message,
                  void *closure_data);
typedef void (*ExternSensor__ModePX24ES_Closure)
                 (const ExternSensor__ModePX24ES *message,
                  void *closure_data);
typedef void (*ExternSensor_Closure)
                 (const ExternSensor *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor extern_sensor__descriptor;
extern const ProtobufCMessageDescriptor extern_sensor__mode__temp_humi__descriptor;
extern const ProtobufCMessageDescriptor extern_sensor__mode_fan__descriptor;
extern const ProtobufCMessageDescriptor extern_sensor__mode__px24_es__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ExternSensor_2eproto__INCLUDED */
