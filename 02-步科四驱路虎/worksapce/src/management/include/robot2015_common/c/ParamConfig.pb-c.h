/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ParamConfig.proto */

#ifndef PROTOBUF_C_ParamConfig_2eproto__INCLUDED
#define PROTOBUF_C_ParamConfig_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ExternSensorConfig.pb-c.h"

typedef struct _ParamConfig ParamConfig;
typedef struct _ParamConfig__ConfigModeDriver ParamConfig__ConfigModeDriver;
typedef struct _ParamConfig__ConfigErrorMode ParamConfig__ConfigErrorMode;
typedef struct _ParamConfig__ConfigAlarmMode ParamConfig__ConfigAlarmMode;


/* --- enums --- */


/* --- messages --- */

struct  _ParamConfig__ConfigModeDriver
{
  ProtobufCMessage base;
  /*
   *自动运动线速度
   */
  protobuf_c_boolean has_autorun_speed;
  int32_t autorun_speed;
  /*
   *自动运动角速度
   */
  protobuf_c_boolean has_autorun_angel;
  int32_t autorun_angel;
  /*
   *遥控器最大线速度
   */
  protobuf_c_boolean has_remote_speed;
  int32_t remote_speed;
  /*
   *遥控器最大角速度(保留)
   */
  protobuf_c_boolean has_remote_angel;
  int32_t remote_angel;
  /*
   *遥控器控制加速度
   */
  protobuf_c_boolean has_remote_accevelocity;
  int32_t remote_accevelocity;
  /*
   *减速比1：X
   */
  protobuf_c_boolean has_reductionratiol;
  float reductionratiol;
  /*
   *轮子周长 L（m）
   */
  protobuf_c_boolean has_wheelssize;
  float wheelssize;
  /*
   *右轮子周长 L（m）
   */
  protobuf_c_boolean has_rwheelssize;
  float rwheelssize;
  /*
   *左轮子周长 L（m）
   */
  protobuf_c_boolean has_lwheelssize;
  float lwheelssize;
  /*
   *编码器整圈脉冲数
   */
  protobuf_c_boolean has_ecounterrpm;
  int32_t ecounterrpm;
};
#define PARAM_CONFIG__CONFIG__MODE__DRIVER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&param_config__config__mode__driver__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _ParamConfig__ConfigErrorMode
{
  ProtobufCMessage base;
  /*
   *左前轮驱动器故障
   */
  protobuf_c_boolean has_carleftfdrivererror_ischeck;
  protobuf_c_boolean carleftfdrivererror_ischeck;
  /*
   *右前轮驱动器故障
   */
  protobuf_c_boolean has_carrightfdrivererror_ischeck;
  protobuf_c_boolean carrightfdrivererror_ischeck;
  /*
   *左后轮驱动器故障
   */
  protobuf_c_boolean has_carleftbdrivererror_ischeck;
  protobuf_c_boolean carleftbdrivererror_ischeck;
  /*
   *右后轮驱动器故障
   */
  protobuf_c_boolean has_carrightbdrivererror_ischeck;
  protobuf_c_boolean carrightbdrivererror_ischeck;
  /*
   *左前轮驱动通信故障
   */
  protobuf_c_boolean has_leftfdrivercomerror_ischeck;
  protobuf_c_boolean leftfdrivercomerror_ischeck;
  /*
   *右前轮驱动通信故障
   */
  protobuf_c_boolean has_rightfdrivercomerror_ischeck;
  protobuf_c_boolean rightfdrivercomerror_ischeck;
  /*
   *左后轮驱动通信故障
   */
  protobuf_c_boolean has_leftbdrivercomerror_ischeck;
  protobuf_c_boolean leftbdrivercomerror_ischeck;
  /*
   *右后轮驱动通信故障
   */
  protobuf_c_boolean has_rightbdrivercomerror_ischeck;
  protobuf_c_boolean rightbdrivercomerror_ischeck;
  /*
   *外围协处理器通信故障
   */
  protobuf_c_boolean has_externcomdeverror_ischeck;
  protobuf_c_boolean externcomdeverror_ischeck;
  /*
   *bms系统故障
   */
  protobuf_c_boolean has_bmssyserror_ischeck;
  protobuf_c_boolean bmssyserror_ischeck;
  /*
   *障碍物告警
   */
  protobuf_c_boolean has_obstaclestoperror_ischeck;
  protobuf_c_boolean obstaclestoperror_ischeck;
  /*
   *碰撞告警
   */
  protobuf_c_boolean has_cashswitchstoperror_ischeck;
  protobuf_c_boolean cashswitchstoperror_ischeck;
  /*
   *系统电流超限	
   */
  protobuf_c_boolean has_currentoverloaderror_ischeck;
  protobuf_c_boolean currentoverloaderror_ischeck;
  /*
   *驱动器管理软模块离线  	
   */
  protobuf_c_boolean has_xrs2015_drivernodeoff_ischeck;
  protobuf_c_boolean xrs2015_drivernodeoff_ischeck;
};
#define PARAM_CONFIG__CONFIG__ERROR__MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&param_config__config__error__mode__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _ParamConfig__ConfigAlarmMode
{
  ProtobufCMessage base;
  /*
   *控制箱高温警告
   */
  protobuf_c_boolean has_ctrolboxhightemalarm_ischeck;
  protobuf_c_boolean ctrolboxhightemalarm_ischeck;
  /*
   *控制箱低温警告
   */
  protobuf_c_boolean has_ctrolboxfrozentemalarm_ischeck;
  protobuf_c_boolean ctrolboxfrozentemalarm_ischeck;
  /*
   *电源管理模块离线告警
   */
  protobuf_c_boolean has_bmsmodcomlostalarm_ischeck;
  protobuf_c_boolean bmsmodcomlostalarm_ischeck;
  /*
   *急停开关使能告警
   */
  protobuf_c_boolean has_emergency_status_stop_ischeck;
  protobuf_c_boolean emergency_status_stop_ischeck;
  /*
   *外围传感器软模块离线
   */
  protobuf_c_boolean has_ecanexternsnsorndeoff_ischeck;
  protobuf_c_boolean ecanexternsnsorndeoff_ischeck;
  /*
   *zmq通信软模块离线
   */
  protobuf_c_boolean has_zmqtransnodeoff_ischeck;
  protobuf_c_boolean zmqtransnodeoff_ischeck;
  /*
   *遥控手柄软模块离线
   */
  protobuf_c_boolean has_joytestnodeoff_ischeck;
  protobuf_c_boolean joytestnodeoff_ischeck;
};
#define PARAM_CONFIG__CONFIG__ALARM__MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&param_config__config__alarm__mode__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _ParamConfig
{
  ProtobufCMessage base;
  /*
   *驱动模块参数配置
   */
  ParamConfig__ConfigModeDriver *config_driver_msg;
  /*
   *错误检查模块配置
   */
  ParamConfig__ConfigErrorMode *config_error_msg;
  /*
   *告警检查模块配置
   */
  ParamConfig__ConfigAlarmMode *config_alarm_msg;
  /*
   *协处理器控制
   */
  ExternSensorConfig *config_extern_msg;
};
#define PARAM_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&param_config__descriptor) \
    , NULL, NULL, NULL, NULL }


/* ParamConfig__ConfigModeDriver methods */
void   param_config__config__mode__driver__init
                     (ParamConfig__ConfigModeDriver         *message);
/* ParamConfig__ConfigErrorMode methods */
void   param_config__config__error__mode__init
                     (ParamConfig__ConfigErrorMode         *message);
/* ParamConfig__ConfigAlarmMode methods */
void   param_config__config__alarm__mode__init
                     (ParamConfig__ConfigAlarmMode         *message);
/* ParamConfig methods */
void   param_config__init
                     (ParamConfig         *message);
size_t param_config__get_packed_size
                     (const ParamConfig   *message);
size_t param_config__pack
                     (const ParamConfig   *message,
                      uint8_t             *out);
size_t param_config__pack_to_buffer
                     (const ParamConfig   *message,
                      ProtobufCBuffer     *buffer);
ParamConfig *
       param_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   param_config__free_unpacked
                     (ParamConfig *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ParamConfig__ConfigModeDriver_Closure)
                 (const ParamConfig__ConfigModeDriver *message,
                  void *closure_data);
typedef void (*ParamConfig__ConfigErrorMode_Closure)
                 (const ParamConfig__ConfigErrorMode *message,
                  void *closure_data);
typedef void (*ParamConfig__ConfigAlarmMode_Closure)
                 (const ParamConfig__ConfigAlarmMode *message,
                  void *closure_data);
typedef void (*ParamConfig_Closure)
                 (const ParamConfig *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor param_config__descriptor;
extern const ProtobufCMessageDescriptor param_config__config__mode__driver__descriptor;
extern const ProtobufCMessageDescriptor param_config__config__error__mode__descriptor;
extern const ProtobufCMessageDescriptor param_config__config__alarm__mode__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ParamConfig_2eproto__INCLUDED */
