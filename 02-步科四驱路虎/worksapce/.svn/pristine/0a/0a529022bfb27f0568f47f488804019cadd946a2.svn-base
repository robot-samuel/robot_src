// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BmsModeConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BmsModeConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BmsModeConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BmsModeConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BmsModeConfig_SOC_Config_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BmsModeConfig_SOC_Config_reflection_ = NULL;
const ::google::protobuf::Descriptor* BmsModeConfig_Fan_Config_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BmsModeConfig_Fan_Config_reflection_ = NULL;
const ::google::protobuf::Descriptor* BmsModeConfig_Nomal_Config_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BmsModeConfig_Nomal_Config_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BmsModeConfig_2eproto() {
  protobuf_AddDesc_BmsModeConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BmsModeConfig.proto");
  GOOGLE_CHECK(file != NULL);
  BmsModeConfig_descriptor_ = file->message_type(0);
  static const int BmsModeConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig, nomal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig, soc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig, fan_),
  };
  BmsModeConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BmsModeConfig_descriptor_,
      BmsModeConfig::default_instance_,
      BmsModeConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BmsModeConfig));
  BmsModeConfig_SOC_Config_descriptor_ = BmsModeConfig_descriptor_->nested_type(0);
  static const int BmsModeConfig_SOC_Config_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_SOC_Config, full_soc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_SOC_Config, current_soc_),
  };
  BmsModeConfig_SOC_Config_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BmsModeConfig_SOC_Config_descriptor_,
      BmsModeConfig_SOC_Config::default_instance_,
      BmsModeConfig_SOC_Config_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_SOC_Config, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_SOC_Config, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BmsModeConfig_SOC_Config));
  BmsModeConfig_Fan_Config_descriptor_ = BmsModeConfig_descriptor_->nested_type(1);
  static const int BmsModeConfig_Fan_Config_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Fan_Config, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Fan_Config, close_),
  };
  BmsModeConfig_Fan_Config_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BmsModeConfig_Fan_Config_descriptor_,
      BmsModeConfig_Fan_Config::default_instance_,
      BmsModeConfig_Fan_Config_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Fan_Config, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Fan_Config, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BmsModeConfig_Fan_Config));
  BmsModeConfig_Nomal_Config_descriptor_ = BmsModeConfig_descriptor_->nested_type(2);
  static const int BmsModeConfig_Nomal_Config_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Nomal_Config, ctrl_charge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Nomal_Config, ctrl_fan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Nomal_Config, ctrl_reset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Nomal_Config, alarm_release_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Nomal_Config, ctrl_motor_power_),
  };
  BmsModeConfig_Nomal_Config_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BmsModeConfig_Nomal_Config_descriptor_,
      BmsModeConfig_Nomal_Config::default_instance_,
      BmsModeConfig_Nomal_Config_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Nomal_Config, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsModeConfig_Nomal_Config, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BmsModeConfig_Nomal_Config));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BmsModeConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BmsModeConfig_descriptor_, &BmsModeConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BmsModeConfig_SOC_Config_descriptor_, &BmsModeConfig_SOC_Config::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BmsModeConfig_Fan_Config_descriptor_, &BmsModeConfig_Fan_Config::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BmsModeConfig_Nomal_Config_descriptor_, &BmsModeConfig_Nomal_Config::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BmsModeConfig_2eproto() {
  delete BmsModeConfig::default_instance_;
  delete BmsModeConfig_reflection_;
  delete BmsModeConfig_SOC_Config::default_instance_;
  delete BmsModeConfig_SOC_Config_reflection_;
  delete BmsModeConfig_Fan_Config::default_instance_;
  delete BmsModeConfig_Fan_Config_reflection_;
  delete BmsModeConfig_Nomal_Config::default_instance_;
  delete BmsModeConfig_Nomal_Config_reflection_;
}

void protobuf_AddDesc_BmsModeConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023BmsModeConfig.proto\"\347\002\n\rBmsModeConfig\022"
    "*\n\005Nomal\030\001 \001(\0132\033.BmsModeConfig.Nomal_Con"
    "fig\022&\n\003SOC\030\002 \001(\0132\031.BmsModeConfig.SOC_Con"
    "fig\022&\n\003fan\030\003 \001(\0132\031.BmsModeConfig.Fan_Con"
    "fig\0323\n\nSOC_Config\022\020\n\010Full_Soc\030\001 \001(\005\022\023\n\013C"
    "urrent_Soc\030\002 \001(\005\032)\n\nFan_Config\022\014\n\004open\030\001"
    " \001(\005\022\r\n\005close\030\002 \001(\005\032z\n\014Nomal_Config\022\023\n\013C"
    "trl_charge\030\001 \001(\005\022\020\n\010Ctrl_fan\030\002 \001(\005\022\022\n\nCt"
    "rl_reset\030\003 \001(\005\022\025\n\rAlarm_release\030\004 \001(\005\022\030\n"
    "\020Ctrl_motor_power\030\005 \001(\005", 383);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BmsModeConfig.proto", &protobuf_RegisterTypes);
  BmsModeConfig::default_instance_ = new BmsModeConfig();
  BmsModeConfig_SOC_Config::default_instance_ = new BmsModeConfig_SOC_Config();
  BmsModeConfig_Fan_Config::default_instance_ = new BmsModeConfig_Fan_Config();
  BmsModeConfig_Nomal_Config::default_instance_ = new BmsModeConfig_Nomal_Config();
  BmsModeConfig::default_instance_->InitAsDefaultInstance();
  BmsModeConfig_SOC_Config::default_instance_->InitAsDefaultInstance();
  BmsModeConfig_Fan_Config::default_instance_->InitAsDefaultInstance();
  BmsModeConfig_Nomal_Config::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BmsModeConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BmsModeConfig_2eproto {
  StaticDescriptorInitializer_BmsModeConfig_2eproto() {
    protobuf_AddDesc_BmsModeConfig_2eproto();
  }
} static_descriptor_initializer_BmsModeConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BmsModeConfig_SOC_Config::kFullSocFieldNumber;
const int BmsModeConfig_SOC_Config::kCurrentSocFieldNumber;
#endif  // !_MSC_VER

BmsModeConfig_SOC_Config::BmsModeConfig_SOC_Config()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BmsModeConfig_SOC_Config::InitAsDefaultInstance() {
}

BmsModeConfig_SOC_Config::BmsModeConfig_SOC_Config(const BmsModeConfig_SOC_Config& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BmsModeConfig_SOC_Config::SharedCtor() {
  _cached_size_ = 0;
  full_soc_ = 0;
  current_soc_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BmsModeConfig_SOC_Config::~BmsModeConfig_SOC_Config() {
  SharedDtor();
}

void BmsModeConfig_SOC_Config::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BmsModeConfig_SOC_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BmsModeConfig_SOC_Config::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BmsModeConfig_SOC_Config_descriptor_;
}

const BmsModeConfig_SOC_Config& BmsModeConfig_SOC_Config::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BmsModeConfig_2eproto();
  return *default_instance_;
}

BmsModeConfig_SOC_Config* BmsModeConfig_SOC_Config::default_instance_ = NULL;

BmsModeConfig_SOC_Config* BmsModeConfig_SOC_Config::New() const {
  return new BmsModeConfig_SOC_Config;
}

void BmsModeConfig_SOC_Config::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    full_soc_ = 0;
    current_soc_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BmsModeConfig_SOC_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Full_Soc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &full_soc_)));
          set_has_full_soc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Current_Soc;
        break;
      }

      // optional int32 Current_Soc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Current_Soc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_soc_)));
          set_has_current_soc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BmsModeConfig_SOC_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Full_Soc = 1;
  if (has_full_soc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->full_soc(), output);
  }

  // optional int32 Current_Soc = 2;
  if (has_current_soc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->current_soc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BmsModeConfig_SOC_Config::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Full_Soc = 1;
  if (has_full_soc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->full_soc(), target);
  }

  // optional int32 Current_Soc = 2;
  if (has_current_soc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->current_soc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BmsModeConfig_SOC_Config::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Full_Soc = 1;
    if (has_full_soc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->full_soc());
    }

    // optional int32 Current_Soc = 2;
    if (has_current_soc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->current_soc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BmsModeConfig_SOC_Config::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BmsModeConfig_SOC_Config* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BmsModeConfig_SOC_Config*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BmsModeConfig_SOC_Config::MergeFrom(const BmsModeConfig_SOC_Config& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_full_soc()) {
      set_full_soc(from.full_soc());
    }
    if (from.has_current_soc()) {
      set_current_soc(from.current_soc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BmsModeConfig_SOC_Config::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmsModeConfig_SOC_Config::CopyFrom(const BmsModeConfig_SOC_Config& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmsModeConfig_SOC_Config::IsInitialized() const {

  return true;
}

void BmsModeConfig_SOC_Config::Swap(BmsModeConfig_SOC_Config* other) {
  if (other != this) {
    std::swap(full_soc_, other->full_soc_);
    std::swap(current_soc_, other->current_soc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BmsModeConfig_SOC_Config::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BmsModeConfig_SOC_Config_descriptor_;
  metadata.reflection = BmsModeConfig_SOC_Config_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BmsModeConfig_Fan_Config::kOpenFieldNumber;
const int BmsModeConfig_Fan_Config::kCloseFieldNumber;
#endif  // !_MSC_VER

BmsModeConfig_Fan_Config::BmsModeConfig_Fan_Config()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BmsModeConfig_Fan_Config::InitAsDefaultInstance() {
}

BmsModeConfig_Fan_Config::BmsModeConfig_Fan_Config(const BmsModeConfig_Fan_Config& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BmsModeConfig_Fan_Config::SharedCtor() {
  _cached_size_ = 0;
  open_ = 0;
  close_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BmsModeConfig_Fan_Config::~BmsModeConfig_Fan_Config() {
  SharedDtor();
}

void BmsModeConfig_Fan_Config::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BmsModeConfig_Fan_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BmsModeConfig_Fan_Config::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BmsModeConfig_Fan_Config_descriptor_;
}

const BmsModeConfig_Fan_Config& BmsModeConfig_Fan_Config::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BmsModeConfig_2eproto();
  return *default_instance_;
}

BmsModeConfig_Fan_Config* BmsModeConfig_Fan_Config::default_instance_ = NULL;

BmsModeConfig_Fan_Config* BmsModeConfig_Fan_Config::New() const {
  return new BmsModeConfig_Fan_Config;
}

void BmsModeConfig_Fan_Config::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    open_ = 0;
    close_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BmsModeConfig_Fan_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 open = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_close;
        break;
      }

      // optional int32 close = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_close:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &close_)));
          set_has_close();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BmsModeConfig_Fan_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 open = 1;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->open(), output);
  }

  // optional int32 close = 2;
  if (has_close()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->close(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BmsModeConfig_Fan_Config::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 open = 1;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->open(), target);
  }

  // optional int32 close = 2;
  if (has_close()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->close(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BmsModeConfig_Fan_Config::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 open = 1;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }

    // optional int32 close = 2;
    if (has_close()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->close());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BmsModeConfig_Fan_Config::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BmsModeConfig_Fan_Config* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BmsModeConfig_Fan_Config*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BmsModeConfig_Fan_Config::MergeFrom(const BmsModeConfig_Fan_Config& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_open()) {
      set_open(from.open());
    }
    if (from.has_close()) {
      set_close(from.close());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BmsModeConfig_Fan_Config::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmsModeConfig_Fan_Config::CopyFrom(const BmsModeConfig_Fan_Config& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmsModeConfig_Fan_Config::IsInitialized() const {

  return true;
}

void BmsModeConfig_Fan_Config::Swap(BmsModeConfig_Fan_Config* other) {
  if (other != this) {
    std::swap(open_, other->open_);
    std::swap(close_, other->close_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BmsModeConfig_Fan_Config::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BmsModeConfig_Fan_Config_descriptor_;
  metadata.reflection = BmsModeConfig_Fan_Config_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BmsModeConfig_Nomal_Config::kCtrlChargeFieldNumber;
const int BmsModeConfig_Nomal_Config::kCtrlFanFieldNumber;
const int BmsModeConfig_Nomal_Config::kCtrlResetFieldNumber;
const int BmsModeConfig_Nomal_Config::kAlarmReleaseFieldNumber;
const int BmsModeConfig_Nomal_Config::kCtrlMotorPowerFieldNumber;
#endif  // !_MSC_VER

BmsModeConfig_Nomal_Config::BmsModeConfig_Nomal_Config()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BmsModeConfig_Nomal_Config::InitAsDefaultInstance() {
}

BmsModeConfig_Nomal_Config::BmsModeConfig_Nomal_Config(const BmsModeConfig_Nomal_Config& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BmsModeConfig_Nomal_Config::SharedCtor() {
  _cached_size_ = 0;
  ctrl_charge_ = 0;
  ctrl_fan_ = 0;
  ctrl_reset_ = 0;
  alarm_release_ = 0;
  ctrl_motor_power_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BmsModeConfig_Nomal_Config::~BmsModeConfig_Nomal_Config() {
  SharedDtor();
}

void BmsModeConfig_Nomal_Config::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BmsModeConfig_Nomal_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BmsModeConfig_Nomal_Config::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BmsModeConfig_Nomal_Config_descriptor_;
}

const BmsModeConfig_Nomal_Config& BmsModeConfig_Nomal_Config::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BmsModeConfig_2eproto();
  return *default_instance_;
}

BmsModeConfig_Nomal_Config* BmsModeConfig_Nomal_Config::default_instance_ = NULL;

BmsModeConfig_Nomal_Config* BmsModeConfig_Nomal_Config::New() const {
  return new BmsModeConfig_Nomal_Config;
}

void BmsModeConfig_Nomal_Config::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ctrl_charge_ = 0;
    ctrl_fan_ = 0;
    ctrl_reset_ = 0;
    alarm_release_ = 0;
    ctrl_motor_power_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BmsModeConfig_Nomal_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Ctrl_charge = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ctrl_charge_)));
          set_has_ctrl_charge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Ctrl_fan;
        break;
      }

      // optional int32 Ctrl_fan = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Ctrl_fan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ctrl_fan_)));
          set_has_ctrl_fan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_Ctrl_reset;
        break;
      }

      // optional int32 Ctrl_reset = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Ctrl_reset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ctrl_reset_)));
          set_has_ctrl_reset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_Alarm_release;
        break;
      }

      // optional int32 Alarm_release = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Alarm_release:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarm_release_)));
          set_has_alarm_release();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_Ctrl_motor_power;
        break;
      }

      // optional int32 Ctrl_motor_power = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Ctrl_motor_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ctrl_motor_power_)));
          set_has_ctrl_motor_power();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BmsModeConfig_Nomal_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Ctrl_charge = 1;
  if (has_ctrl_charge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ctrl_charge(), output);
  }

  // optional int32 Ctrl_fan = 2;
  if (has_ctrl_fan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ctrl_fan(), output);
  }

  // optional int32 Ctrl_reset = 3;
  if (has_ctrl_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ctrl_reset(), output);
  }

  // optional int32 Alarm_release = 4;
  if (has_alarm_release()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->alarm_release(), output);
  }

  // optional int32 Ctrl_motor_power = 5;
  if (has_ctrl_motor_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ctrl_motor_power(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BmsModeConfig_Nomal_Config::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Ctrl_charge = 1;
  if (has_ctrl_charge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ctrl_charge(), target);
  }

  // optional int32 Ctrl_fan = 2;
  if (has_ctrl_fan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ctrl_fan(), target);
  }

  // optional int32 Ctrl_reset = 3;
  if (has_ctrl_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ctrl_reset(), target);
  }

  // optional int32 Alarm_release = 4;
  if (has_alarm_release()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->alarm_release(), target);
  }

  // optional int32 Ctrl_motor_power = 5;
  if (has_ctrl_motor_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ctrl_motor_power(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BmsModeConfig_Nomal_Config::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Ctrl_charge = 1;
    if (has_ctrl_charge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ctrl_charge());
    }

    // optional int32 Ctrl_fan = 2;
    if (has_ctrl_fan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ctrl_fan());
    }

    // optional int32 Ctrl_reset = 3;
    if (has_ctrl_reset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ctrl_reset());
    }

    // optional int32 Alarm_release = 4;
    if (has_alarm_release()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarm_release());
    }

    // optional int32 Ctrl_motor_power = 5;
    if (has_ctrl_motor_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ctrl_motor_power());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BmsModeConfig_Nomal_Config::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BmsModeConfig_Nomal_Config* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BmsModeConfig_Nomal_Config*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BmsModeConfig_Nomal_Config::MergeFrom(const BmsModeConfig_Nomal_Config& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ctrl_charge()) {
      set_ctrl_charge(from.ctrl_charge());
    }
    if (from.has_ctrl_fan()) {
      set_ctrl_fan(from.ctrl_fan());
    }
    if (from.has_ctrl_reset()) {
      set_ctrl_reset(from.ctrl_reset());
    }
    if (from.has_alarm_release()) {
      set_alarm_release(from.alarm_release());
    }
    if (from.has_ctrl_motor_power()) {
      set_ctrl_motor_power(from.ctrl_motor_power());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BmsModeConfig_Nomal_Config::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmsModeConfig_Nomal_Config::CopyFrom(const BmsModeConfig_Nomal_Config& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmsModeConfig_Nomal_Config::IsInitialized() const {

  return true;
}

void BmsModeConfig_Nomal_Config::Swap(BmsModeConfig_Nomal_Config* other) {
  if (other != this) {
    std::swap(ctrl_charge_, other->ctrl_charge_);
    std::swap(ctrl_fan_, other->ctrl_fan_);
    std::swap(ctrl_reset_, other->ctrl_reset_);
    std::swap(alarm_release_, other->alarm_release_);
    std::swap(ctrl_motor_power_, other->ctrl_motor_power_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BmsModeConfig_Nomal_Config::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BmsModeConfig_Nomal_Config_descriptor_;
  metadata.reflection = BmsModeConfig_Nomal_Config_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BmsModeConfig::kNomalFieldNumber;
const int BmsModeConfig::kSOCFieldNumber;
const int BmsModeConfig::kFanFieldNumber;
#endif  // !_MSC_VER

BmsModeConfig::BmsModeConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BmsModeConfig::InitAsDefaultInstance() {
  nomal_ = const_cast< ::BmsModeConfig_Nomal_Config*>(&::BmsModeConfig_Nomal_Config::default_instance());
  soc_ = const_cast< ::BmsModeConfig_SOC_Config*>(&::BmsModeConfig_SOC_Config::default_instance());
  fan_ = const_cast< ::BmsModeConfig_Fan_Config*>(&::BmsModeConfig_Fan_Config::default_instance());
}

BmsModeConfig::BmsModeConfig(const BmsModeConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BmsModeConfig::SharedCtor() {
  _cached_size_ = 0;
  nomal_ = NULL;
  soc_ = NULL;
  fan_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BmsModeConfig::~BmsModeConfig() {
  SharedDtor();
}

void BmsModeConfig::SharedDtor() {
  if (this != default_instance_) {
    delete nomal_;
    delete soc_;
    delete fan_;
  }
}

void BmsModeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BmsModeConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BmsModeConfig_descriptor_;
}

const BmsModeConfig& BmsModeConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BmsModeConfig_2eproto();
  return *default_instance_;
}

BmsModeConfig* BmsModeConfig::default_instance_ = NULL;

BmsModeConfig* BmsModeConfig::New() const {
  return new BmsModeConfig;
}

void BmsModeConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_nomal()) {
      if (nomal_ != NULL) nomal_->::BmsModeConfig_Nomal_Config::Clear();
    }
    if (has_soc()) {
      if (soc_ != NULL) soc_->::BmsModeConfig_SOC_Config::Clear();
    }
    if (has_fan()) {
      if (fan_ != NULL) fan_->::BmsModeConfig_Fan_Config::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BmsModeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BmsModeConfig.Nomal_Config Nomal = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nomal()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_SOC;
        break;
      }

      // optional .BmsModeConfig.SOC_Config SOC = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SOC:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_soc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_fan;
        break;
      }

      // optional .BmsModeConfig.Fan_Config fan = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fan:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fan()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BmsModeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .BmsModeConfig.Nomal_Config Nomal = 1;
  if (has_nomal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nomal(), output);
  }

  // optional .BmsModeConfig.SOC_Config SOC = 2;
  if (has_soc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->soc(), output);
  }

  // optional .BmsModeConfig.Fan_Config fan = 3;
  if (has_fan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->fan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BmsModeConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .BmsModeConfig.Nomal_Config Nomal = 1;
  if (has_nomal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nomal(), target);
  }

  // optional .BmsModeConfig.SOC_Config SOC = 2;
  if (has_soc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->soc(), target);
  }

  // optional .BmsModeConfig.Fan_Config fan = 3;
  if (has_fan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->fan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BmsModeConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .BmsModeConfig.Nomal_Config Nomal = 1;
    if (has_nomal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nomal());
    }

    // optional .BmsModeConfig.SOC_Config SOC = 2;
    if (has_soc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->soc());
    }

    // optional .BmsModeConfig.Fan_Config fan = 3;
    if (has_fan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fan());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BmsModeConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BmsModeConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BmsModeConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BmsModeConfig::MergeFrom(const BmsModeConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nomal()) {
      mutable_nomal()->::BmsModeConfig_Nomal_Config::MergeFrom(from.nomal());
    }
    if (from.has_soc()) {
      mutable_soc()->::BmsModeConfig_SOC_Config::MergeFrom(from.soc());
    }
    if (from.has_fan()) {
      mutable_fan()->::BmsModeConfig_Fan_Config::MergeFrom(from.fan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BmsModeConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmsModeConfig::CopyFrom(const BmsModeConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmsModeConfig::IsInitialized() const {

  return true;
}

void BmsModeConfig::Swap(BmsModeConfig* other) {
  if (other != this) {
    std::swap(nomal_, other->nomal_);
    std::swap(soc_, other->soc_);
    std::swap(fan_, other->fan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BmsModeConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BmsModeConfig_descriptor_;
  metadata.reflection = BmsModeConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
