// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BMSMessage.proto

#ifndef PROTOBUF_BMSMessage_2eproto__INCLUDED
#define PROTOBUF_BMSMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BMSMessage_2eproto();
void protobuf_AssignDesc_BMSMessage_2eproto();
void protobuf_ShutdownFile_BMSMessage_2eproto();

class BmsMessage;
class BmsMessage_statusMessage;
class BmsMessage_alarmMessage;

// ===================================================================

class BmsMessage_statusMessage : public ::google::protobuf::Message {
 public:
  BmsMessage_statusMessage();
  virtual ~BmsMessage_statusMessage();

  BmsMessage_statusMessage(const BmsMessage_statusMessage& from);

  inline BmsMessage_statusMessage& operator=(const BmsMessage_statusMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsMessage_statusMessage& default_instance();

  void Swap(BmsMessage_statusMessage* other);

  // implements Message ----------------------------------------------

  BmsMessage_statusMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BmsMessage_statusMessage& from);
  void MergeFrom(const BmsMessage_statusMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool BMS_status_Charge_Touch = 1;
  inline bool has_bms_status_charge_touch() const;
  inline void clear_bms_status_charge_touch();
  static const int kBMSStatusChargeTouchFieldNumber = 1;
  inline bool bms_status_charge_touch() const;
  inline void set_bms_status_charge_touch(bool value);

  // optional bool BMS_status_Charge_Connect = 2;
  inline bool has_bms_status_charge_connect() const;
  inline void clear_bms_status_charge_connect();
  static const int kBMSStatusChargeConnectFieldNumber = 2;
  inline bool bms_status_charge_connect() const;
  inline void set_bms_status_charge_connect(bool value);

  // optional bool BMS_status_Emergency_Status = 3;
  inline bool has_bms_status_emergency_status() const;
  inline void clear_bms_status_emergency_status();
  static const int kBMSStatusEmergencyStatusFieldNumber = 3;
  inline bool bms_status_emergency_status() const;
  inline void set_bms_status_emergency_status(bool value);

  // optional bool BMS_status_Switch_Status = 4;
  inline bool has_bms_status_switch_status() const;
  inline void clear_bms_status_switch_status();
  static const int kBMSStatusSwitchStatusFieldNumber = 4;
  inline bool bms_status_switch_status() const;
  inline void set_bms_status_switch_status(bool value);

  // optional bool BMS_status_Motor24_Status = 5;
  inline bool has_bms_status_motor24_status() const;
  inline void clear_bms_status_motor24_status();
  static const int kBMSStatusMotor24StatusFieldNumber = 5;
  inline bool bms_status_motor24_status() const;
  inline void set_bms_status_motor24_status(bool value);

  // optional bool BMS_status_SYS24_Status = 6;
  inline bool has_bms_status_sys24_status() const;
  inline void clear_bms_status_sys24_status();
  static const int kBMSStatusSYS24StatusFieldNumber = 6;
  inline bool bms_status_sys24_status() const;
  inline void set_bms_status_sys24_status(bool value);

  // optional bool BMS_status_Heat_Status = 7;
  inline bool has_bms_status_heat_status() const;
  inline void clear_bms_status_heat_status();
  static const int kBMSStatusHeatStatusFieldNumber = 7;
  inline bool bms_status_heat_status() const;
  inline void set_bms_status_heat_status(bool value);

  // optional bool BMS_status_Fan_Status = 8;
  inline bool has_bms_status_fan_status() const;
  inline void clear_bms_status_fan_status();
  static const int kBMSStatusFanStatusFieldNumber = 8;
  inline bool bms_status_fan_status() const;
  inline void set_bms_status_fan_status(bool value);

  // @@protoc_insertion_point(class_scope:BmsMessage.statusMessage)
 private:
  inline void set_has_bms_status_charge_touch();
  inline void clear_has_bms_status_charge_touch();
  inline void set_has_bms_status_charge_connect();
  inline void clear_has_bms_status_charge_connect();
  inline void set_has_bms_status_emergency_status();
  inline void clear_has_bms_status_emergency_status();
  inline void set_has_bms_status_switch_status();
  inline void clear_has_bms_status_switch_status();
  inline void set_has_bms_status_motor24_status();
  inline void clear_has_bms_status_motor24_status();
  inline void set_has_bms_status_sys24_status();
  inline void clear_has_bms_status_sys24_status();
  inline void set_has_bms_status_heat_status();
  inline void clear_has_bms_status_heat_status();
  inline void set_has_bms_status_fan_status();
  inline void clear_has_bms_status_fan_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bms_status_charge_touch_;
  bool bms_status_charge_connect_;
  bool bms_status_emergency_status_;
  bool bms_status_switch_status_;
  bool bms_status_motor24_status_;
  bool bms_status_sys24_status_;
  bool bms_status_heat_status_;
  bool bms_status_fan_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_BMSMessage_2eproto();
  friend void protobuf_AssignDesc_BMSMessage_2eproto();
  friend void protobuf_ShutdownFile_BMSMessage_2eproto();

  void InitAsDefaultInstance();
  static BmsMessage_statusMessage* default_instance_;
};
// -------------------------------------------------------------------

class BmsMessage_alarmMessage : public ::google::protobuf::Message {
 public:
  BmsMessage_alarmMessage();
  virtual ~BmsMessage_alarmMessage();

  BmsMessage_alarmMessage(const BmsMessage_alarmMessage& from);

  inline BmsMessage_alarmMessage& operator=(const BmsMessage_alarmMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsMessage_alarmMessage& default_instance();

  void Swap(BmsMessage_alarmMessage* other);

  // implements Message ----------------------------------------------

  BmsMessage_alarmMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BmsMessage_alarmMessage& from);
  void MergeFrom(const BmsMessage_alarmMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool BMS_error_Voltage_Alarm = 1;
  inline bool has_bms_error_voltage_alarm() const;
  inline void clear_bms_error_voltage_alarm();
  static const int kBMSErrorVoltageAlarmFieldNumber = 1;
  inline bool bms_error_voltage_alarm() const;
  inline void set_bms_error_voltage_alarm(bool value);

  // optional bool BMS_error_Voltage_Error = 2;
  inline bool has_bms_error_voltage_error() const;
  inline void clear_bms_error_voltage_error();
  static const int kBMSErrorVoltageErrorFieldNumber = 2;
  inline bool bms_error_voltage_error() const;
  inline void set_bms_error_voltage_error(bool value);

  // optional bool BMS_error_Current_Alarm = 3;
  inline bool has_bms_error_current_alarm() const;
  inline void clear_bms_error_current_alarm();
  static const int kBMSErrorCurrentAlarmFieldNumber = 3;
  inline bool bms_error_current_alarm() const;
  inline void set_bms_error_current_alarm(bool value);

  // optional bool BMS_error_Current_Error = 4;
  inline bool has_bms_error_current_error() const;
  inline void clear_bms_error_current_error();
  static const int kBMSErrorCurrentErrorFieldNumber = 4;
  inline bool bms_error_current_error() const;
  inline void set_bms_error_current_error(bool value);

  // optional bool BMS_error_Temperature_Alarm = 5;
  inline bool has_bms_error_temperature_alarm() const;
  inline void clear_bms_error_temperature_alarm();
  static const int kBMSErrorTemperatureAlarmFieldNumber = 5;
  inline bool bms_error_temperature_alarm() const;
  inline void set_bms_error_temperature_alarm(bool value);

  // optional bool BMS_error_Temperature_Error = 6;
  inline bool has_bms_error_temperature_error() const;
  inline void clear_bms_error_temperature_error();
  static const int kBMSErrorTemperatureErrorFieldNumber = 6;
  inline bool bms_error_temperature_error() const;
  inline void set_bms_error_temperature_error(bool value);

  // optional bool BMS_error_SOC_Alarm = 7;
  inline bool has_bms_error_soc_alarm() const;
  inline void clear_bms_error_soc_alarm();
  static const int kBMSErrorSOCAlarmFieldNumber = 7;
  inline bool bms_error_soc_alarm() const;
  inline void set_bms_error_soc_alarm(bool value);

  // optional bool BMS_error_SOC_Error = 8;
  inline bool has_bms_error_soc_error() const;
  inline void clear_bms_error_soc_error();
  static const int kBMSErrorSOCErrorFieldNumber = 8;
  inline bool bms_error_soc_error() const;
  inline void set_bms_error_soc_error(bool value);

  // @@protoc_insertion_point(class_scope:BmsMessage.alarmMessage)
 private:
  inline void set_has_bms_error_voltage_alarm();
  inline void clear_has_bms_error_voltage_alarm();
  inline void set_has_bms_error_voltage_error();
  inline void clear_has_bms_error_voltage_error();
  inline void set_has_bms_error_current_alarm();
  inline void clear_has_bms_error_current_alarm();
  inline void set_has_bms_error_current_error();
  inline void clear_has_bms_error_current_error();
  inline void set_has_bms_error_temperature_alarm();
  inline void clear_has_bms_error_temperature_alarm();
  inline void set_has_bms_error_temperature_error();
  inline void clear_has_bms_error_temperature_error();
  inline void set_has_bms_error_soc_alarm();
  inline void clear_has_bms_error_soc_alarm();
  inline void set_has_bms_error_soc_error();
  inline void clear_has_bms_error_soc_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bms_error_voltage_alarm_;
  bool bms_error_voltage_error_;
  bool bms_error_current_alarm_;
  bool bms_error_current_error_;
  bool bms_error_temperature_alarm_;
  bool bms_error_temperature_error_;
  bool bms_error_soc_alarm_;
  bool bms_error_soc_error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_BMSMessage_2eproto();
  friend void protobuf_AssignDesc_BMSMessage_2eproto();
  friend void protobuf_ShutdownFile_BMSMessage_2eproto();

  void InitAsDefaultInstance();
  static BmsMessage_alarmMessage* default_instance_;
};
// -------------------------------------------------------------------

class BmsMessage : public ::google::protobuf::Message {
 public:
  BmsMessage();
  virtual ~BmsMessage();

  BmsMessage(const BmsMessage& from);

  inline BmsMessage& operator=(const BmsMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BmsMessage& default_instance();

  void Swap(BmsMessage* other);

  // implements Message ----------------------------------------------

  BmsMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BmsMessage& from);
  void MergeFrom(const BmsMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BmsMessage_statusMessage statusMessage;
  typedef BmsMessage_alarmMessage alarmMessage;

  // accessors -------------------------------------------------------

  // optional int32 Stat = 1;
  inline bool has_stat() const;
  inline void clear_stat();
  static const int kStatFieldNumber = 1;
  inline ::google::protobuf::int32 stat() const;
  inline void set_stat(::google::protobuf::int32 value);

  // optional int32 BMS_SOC = 2;
  inline bool has_bms_soc() const;
  inline void clear_bms_soc();
  static const int kBMSSOCFieldNumber = 2;
  inline ::google::protobuf::int32 bms_soc() const;
  inline void set_bms_soc(::google::protobuf::int32 value);

  // optional int32 BMS_FULL_SOC = 3;
  inline bool has_bms_full_soc() const;
  inline void clear_bms_full_soc();
  static const int kBMSFULLSOCFieldNumber = 3;
  inline ::google::protobuf::int32 bms_full_soc() const;
  inline void set_bms_full_soc(::google::protobuf::int32 value);

  // optional float BMS_Voltage = 4;
  inline bool has_bms_voltage() const;
  inline void clear_bms_voltage();
  static const int kBMSVoltageFieldNumber = 4;
  inline float bms_voltage() const;
  inline void set_bms_voltage(float value);

  // optional float BMS_sys_Current = 5;
  inline bool has_bms_sys_current() const;
  inline void clear_bms_sys_current();
  static const int kBMSSysCurrentFieldNumber = 5;
  inline float bms_sys_current() const;
  inline void set_bms_sys_current(float value);

  // optional float BMS_motor_Current = 6;
  inline bool has_bms_motor_current() const;
  inline void clear_bms_motor_current();
  static const int kBMSMotorCurrentFieldNumber = 6;
  inline float bms_motor_current() const;
  inline void set_bms_motor_current(float value);

  // optional float BMS_charg_Current = 7;
  inline bool has_bms_charg_current() const;
  inline void clear_bms_charg_current();
  static const int kBMSChargCurrentFieldNumber = 7;
  inline float bms_charg_current() const;
  inline void set_bms_charg_current(float value);

  // optional int32 BMS_board_temp = 8;
  inline bool has_bms_board_temp() const;
  inline void clear_bms_board_temp();
  static const int kBMSBoardTempFieldNumber = 8;
  inline ::google::protobuf::int32 bms_board_temp() const;
  inline void set_bms_board_temp(::google::protobuf::int32 value);

  // optional int32 BMS_battery_tempA = 9;
  inline bool has_bms_battery_tempa() const;
  inline void clear_bms_battery_tempa();
  static const int kBMSBatteryTempAFieldNumber = 9;
  inline ::google::protobuf::int32 bms_battery_tempa() const;
  inline void set_bms_battery_tempa(::google::protobuf::int32 value);

  // optional int32 BMS_battery_tempB = 10;
  inline bool has_bms_battery_tempb() const;
  inline void clear_bms_battery_tempb();
  static const int kBMSBatteryTempBFieldNumber = 10;
  inline ::google::protobuf::int32 bms_battery_tempb() const;
  inline void set_bms_battery_tempb(::google::protobuf::int32 value);

  // optional .BmsMessage.statusMessage statusMsg = 11;
  inline bool has_statusmsg() const;
  inline void clear_statusmsg();
  static const int kStatusMsgFieldNumber = 11;
  inline const ::BmsMessage_statusMessage& statusmsg() const;
  inline ::BmsMessage_statusMessage* mutable_statusmsg();
  inline ::BmsMessage_statusMessage* release_statusmsg();
  inline void set_allocated_statusmsg(::BmsMessage_statusMessage* statusmsg);

  // optional .BmsMessage.alarmMessage alarmMsg = 12;
  inline bool has_alarmmsg() const;
  inline void clear_alarmmsg();
  static const int kAlarmMsgFieldNumber = 12;
  inline const ::BmsMessage_alarmMessage& alarmmsg() const;
  inline ::BmsMessage_alarmMessage* mutable_alarmmsg();
  inline ::BmsMessage_alarmMessage* release_alarmmsg();
  inline void set_allocated_alarmmsg(::BmsMessage_alarmMessage* alarmmsg);

  // @@protoc_insertion_point(class_scope:BmsMessage)
 private:
  inline void set_has_stat();
  inline void clear_has_stat();
  inline void set_has_bms_soc();
  inline void clear_has_bms_soc();
  inline void set_has_bms_full_soc();
  inline void clear_has_bms_full_soc();
  inline void set_has_bms_voltage();
  inline void clear_has_bms_voltage();
  inline void set_has_bms_sys_current();
  inline void clear_has_bms_sys_current();
  inline void set_has_bms_motor_current();
  inline void clear_has_bms_motor_current();
  inline void set_has_bms_charg_current();
  inline void clear_has_bms_charg_current();
  inline void set_has_bms_board_temp();
  inline void clear_has_bms_board_temp();
  inline void set_has_bms_battery_tempa();
  inline void clear_has_bms_battery_tempa();
  inline void set_has_bms_battery_tempb();
  inline void clear_has_bms_battery_tempb();
  inline void set_has_statusmsg();
  inline void clear_has_statusmsg();
  inline void set_has_alarmmsg();
  inline void clear_has_alarmmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stat_;
  ::google::protobuf::int32 bms_soc_;
  ::google::protobuf::int32 bms_full_soc_;
  float bms_voltage_;
  float bms_sys_current_;
  float bms_motor_current_;
  float bms_charg_current_;
  ::google::protobuf::int32 bms_board_temp_;
  ::google::protobuf::int32 bms_battery_tempa_;
  ::google::protobuf::int32 bms_battery_tempb_;
  ::BmsMessage_statusMessage* statusmsg_;
  ::BmsMessage_alarmMessage* alarmmsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_BMSMessage_2eproto();
  friend void protobuf_AssignDesc_BMSMessage_2eproto();
  friend void protobuf_ShutdownFile_BMSMessage_2eproto();

  void InitAsDefaultInstance();
  static BmsMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// BmsMessage_statusMessage

// optional bool BMS_status_Charge_Touch = 1;
inline bool BmsMessage_statusMessage::has_bms_status_charge_touch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BmsMessage_statusMessage::set_has_bms_status_charge_touch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BmsMessage_statusMessage::clear_has_bms_status_charge_touch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BmsMessage_statusMessage::clear_bms_status_charge_touch() {
  bms_status_charge_touch_ = false;
  clear_has_bms_status_charge_touch();
}
inline bool BmsMessage_statusMessage::bms_status_charge_touch() const {
  return bms_status_charge_touch_;
}
inline void BmsMessage_statusMessage::set_bms_status_charge_touch(bool value) {
  set_has_bms_status_charge_touch();
  bms_status_charge_touch_ = value;
}

// optional bool BMS_status_Charge_Connect = 2;
inline bool BmsMessage_statusMessage::has_bms_status_charge_connect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BmsMessage_statusMessage::set_has_bms_status_charge_connect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BmsMessage_statusMessage::clear_has_bms_status_charge_connect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BmsMessage_statusMessage::clear_bms_status_charge_connect() {
  bms_status_charge_connect_ = false;
  clear_has_bms_status_charge_connect();
}
inline bool BmsMessage_statusMessage::bms_status_charge_connect() const {
  return bms_status_charge_connect_;
}
inline void BmsMessage_statusMessage::set_bms_status_charge_connect(bool value) {
  set_has_bms_status_charge_connect();
  bms_status_charge_connect_ = value;
}

// optional bool BMS_status_Emergency_Status = 3;
inline bool BmsMessage_statusMessage::has_bms_status_emergency_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BmsMessage_statusMessage::set_has_bms_status_emergency_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BmsMessage_statusMessage::clear_has_bms_status_emergency_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BmsMessage_statusMessage::clear_bms_status_emergency_status() {
  bms_status_emergency_status_ = false;
  clear_has_bms_status_emergency_status();
}
inline bool BmsMessage_statusMessage::bms_status_emergency_status() const {
  return bms_status_emergency_status_;
}
inline void BmsMessage_statusMessage::set_bms_status_emergency_status(bool value) {
  set_has_bms_status_emergency_status();
  bms_status_emergency_status_ = value;
}

// optional bool BMS_status_Switch_Status = 4;
inline bool BmsMessage_statusMessage::has_bms_status_switch_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BmsMessage_statusMessage::set_has_bms_status_switch_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BmsMessage_statusMessage::clear_has_bms_status_switch_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BmsMessage_statusMessage::clear_bms_status_switch_status() {
  bms_status_switch_status_ = false;
  clear_has_bms_status_switch_status();
}
inline bool BmsMessage_statusMessage::bms_status_switch_status() const {
  return bms_status_switch_status_;
}
inline void BmsMessage_statusMessage::set_bms_status_switch_status(bool value) {
  set_has_bms_status_switch_status();
  bms_status_switch_status_ = value;
}

// optional bool BMS_status_Motor24_Status = 5;
inline bool BmsMessage_statusMessage::has_bms_status_motor24_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BmsMessage_statusMessage::set_has_bms_status_motor24_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BmsMessage_statusMessage::clear_has_bms_status_motor24_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BmsMessage_statusMessage::clear_bms_status_motor24_status() {
  bms_status_motor24_status_ = false;
  clear_has_bms_status_motor24_status();
}
inline bool BmsMessage_statusMessage::bms_status_motor24_status() const {
  return bms_status_motor24_status_;
}
inline void BmsMessage_statusMessage::set_bms_status_motor24_status(bool value) {
  set_has_bms_status_motor24_status();
  bms_status_motor24_status_ = value;
}

// optional bool BMS_status_SYS24_Status = 6;
inline bool BmsMessage_statusMessage::has_bms_status_sys24_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BmsMessage_statusMessage::set_has_bms_status_sys24_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BmsMessage_statusMessage::clear_has_bms_status_sys24_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BmsMessage_statusMessage::clear_bms_status_sys24_status() {
  bms_status_sys24_status_ = false;
  clear_has_bms_status_sys24_status();
}
inline bool BmsMessage_statusMessage::bms_status_sys24_status() const {
  return bms_status_sys24_status_;
}
inline void BmsMessage_statusMessage::set_bms_status_sys24_status(bool value) {
  set_has_bms_status_sys24_status();
  bms_status_sys24_status_ = value;
}

// optional bool BMS_status_Heat_Status = 7;
inline bool BmsMessage_statusMessage::has_bms_status_heat_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BmsMessage_statusMessage::set_has_bms_status_heat_status() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BmsMessage_statusMessage::clear_has_bms_status_heat_status() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BmsMessage_statusMessage::clear_bms_status_heat_status() {
  bms_status_heat_status_ = false;
  clear_has_bms_status_heat_status();
}
inline bool BmsMessage_statusMessage::bms_status_heat_status() const {
  return bms_status_heat_status_;
}
inline void BmsMessage_statusMessage::set_bms_status_heat_status(bool value) {
  set_has_bms_status_heat_status();
  bms_status_heat_status_ = value;
}

// optional bool BMS_status_Fan_Status = 8;
inline bool BmsMessage_statusMessage::has_bms_status_fan_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BmsMessage_statusMessage::set_has_bms_status_fan_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BmsMessage_statusMessage::clear_has_bms_status_fan_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BmsMessage_statusMessage::clear_bms_status_fan_status() {
  bms_status_fan_status_ = false;
  clear_has_bms_status_fan_status();
}
inline bool BmsMessage_statusMessage::bms_status_fan_status() const {
  return bms_status_fan_status_;
}
inline void BmsMessage_statusMessage::set_bms_status_fan_status(bool value) {
  set_has_bms_status_fan_status();
  bms_status_fan_status_ = value;
}

// -------------------------------------------------------------------

// BmsMessage_alarmMessage

// optional bool BMS_error_Voltage_Alarm = 1;
inline bool BmsMessage_alarmMessage::has_bms_error_voltage_alarm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BmsMessage_alarmMessage::set_has_bms_error_voltage_alarm() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BmsMessage_alarmMessage::clear_has_bms_error_voltage_alarm() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BmsMessage_alarmMessage::clear_bms_error_voltage_alarm() {
  bms_error_voltage_alarm_ = false;
  clear_has_bms_error_voltage_alarm();
}
inline bool BmsMessage_alarmMessage::bms_error_voltage_alarm() const {
  return bms_error_voltage_alarm_;
}
inline void BmsMessage_alarmMessage::set_bms_error_voltage_alarm(bool value) {
  set_has_bms_error_voltage_alarm();
  bms_error_voltage_alarm_ = value;
}

// optional bool BMS_error_Voltage_Error = 2;
inline bool BmsMessage_alarmMessage::has_bms_error_voltage_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BmsMessage_alarmMessage::set_has_bms_error_voltage_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BmsMessage_alarmMessage::clear_has_bms_error_voltage_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BmsMessage_alarmMessage::clear_bms_error_voltage_error() {
  bms_error_voltage_error_ = false;
  clear_has_bms_error_voltage_error();
}
inline bool BmsMessage_alarmMessage::bms_error_voltage_error() const {
  return bms_error_voltage_error_;
}
inline void BmsMessage_alarmMessage::set_bms_error_voltage_error(bool value) {
  set_has_bms_error_voltage_error();
  bms_error_voltage_error_ = value;
}

// optional bool BMS_error_Current_Alarm = 3;
inline bool BmsMessage_alarmMessage::has_bms_error_current_alarm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BmsMessage_alarmMessage::set_has_bms_error_current_alarm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BmsMessage_alarmMessage::clear_has_bms_error_current_alarm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BmsMessage_alarmMessage::clear_bms_error_current_alarm() {
  bms_error_current_alarm_ = false;
  clear_has_bms_error_current_alarm();
}
inline bool BmsMessage_alarmMessage::bms_error_current_alarm() const {
  return bms_error_current_alarm_;
}
inline void BmsMessage_alarmMessage::set_bms_error_current_alarm(bool value) {
  set_has_bms_error_current_alarm();
  bms_error_current_alarm_ = value;
}

// optional bool BMS_error_Current_Error = 4;
inline bool BmsMessage_alarmMessage::has_bms_error_current_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BmsMessage_alarmMessage::set_has_bms_error_current_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BmsMessage_alarmMessage::clear_has_bms_error_current_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BmsMessage_alarmMessage::clear_bms_error_current_error() {
  bms_error_current_error_ = false;
  clear_has_bms_error_current_error();
}
inline bool BmsMessage_alarmMessage::bms_error_current_error() const {
  return bms_error_current_error_;
}
inline void BmsMessage_alarmMessage::set_bms_error_current_error(bool value) {
  set_has_bms_error_current_error();
  bms_error_current_error_ = value;
}

// optional bool BMS_error_Temperature_Alarm = 5;
inline bool BmsMessage_alarmMessage::has_bms_error_temperature_alarm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BmsMessage_alarmMessage::set_has_bms_error_temperature_alarm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BmsMessage_alarmMessage::clear_has_bms_error_temperature_alarm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BmsMessage_alarmMessage::clear_bms_error_temperature_alarm() {
  bms_error_temperature_alarm_ = false;
  clear_has_bms_error_temperature_alarm();
}
inline bool BmsMessage_alarmMessage::bms_error_temperature_alarm() const {
  return bms_error_temperature_alarm_;
}
inline void BmsMessage_alarmMessage::set_bms_error_temperature_alarm(bool value) {
  set_has_bms_error_temperature_alarm();
  bms_error_temperature_alarm_ = value;
}

// optional bool BMS_error_Temperature_Error = 6;
inline bool BmsMessage_alarmMessage::has_bms_error_temperature_error() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BmsMessage_alarmMessage::set_has_bms_error_temperature_error() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BmsMessage_alarmMessage::clear_has_bms_error_temperature_error() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BmsMessage_alarmMessage::clear_bms_error_temperature_error() {
  bms_error_temperature_error_ = false;
  clear_has_bms_error_temperature_error();
}
inline bool BmsMessage_alarmMessage::bms_error_temperature_error() const {
  return bms_error_temperature_error_;
}
inline void BmsMessage_alarmMessage::set_bms_error_temperature_error(bool value) {
  set_has_bms_error_temperature_error();
  bms_error_temperature_error_ = value;
}

// optional bool BMS_error_SOC_Alarm = 7;
inline bool BmsMessage_alarmMessage::has_bms_error_soc_alarm() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BmsMessage_alarmMessage::set_has_bms_error_soc_alarm() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BmsMessage_alarmMessage::clear_has_bms_error_soc_alarm() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BmsMessage_alarmMessage::clear_bms_error_soc_alarm() {
  bms_error_soc_alarm_ = false;
  clear_has_bms_error_soc_alarm();
}
inline bool BmsMessage_alarmMessage::bms_error_soc_alarm() const {
  return bms_error_soc_alarm_;
}
inline void BmsMessage_alarmMessage::set_bms_error_soc_alarm(bool value) {
  set_has_bms_error_soc_alarm();
  bms_error_soc_alarm_ = value;
}

// optional bool BMS_error_SOC_Error = 8;
inline bool BmsMessage_alarmMessage::has_bms_error_soc_error() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BmsMessage_alarmMessage::set_has_bms_error_soc_error() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BmsMessage_alarmMessage::clear_has_bms_error_soc_error() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BmsMessage_alarmMessage::clear_bms_error_soc_error() {
  bms_error_soc_error_ = false;
  clear_has_bms_error_soc_error();
}
inline bool BmsMessage_alarmMessage::bms_error_soc_error() const {
  return bms_error_soc_error_;
}
inline void BmsMessage_alarmMessage::set_bms_error_soc_error(bool value) {
  set_has_bms_error_soc_error();
  bms_error_soc_error_ = value;
}

// -------------------------------------------------------------------

// BmsMessage

// optional int32 Stat = 1;
inline bool BmsMessage::has_stat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BmsMessage::set_has_stat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BmsMessage::clear_has_stat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BmsMessage::clear_stat() {
  stat_ = 0;
  clear_has_stat();
}
inline ::google::protobuf::int32 BmsMessage::stat() const {
  return stat_;
}
inline void BmsMessage::set_stat(::google::protobuf::int32 value) {
  set_has_stat();
  stat_ = value;
}

// optional int32 BMS_SOC = 2;
inline bool BmsMessage::has_bms_soc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BmsMessage::set_has_bms_soc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BmsMessage::clear_has_bms_soc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BmsMessage::clear_bms_soc() {
  bms_soc_ = 0;
  clear_has_bms_soc();
}
inline ::google::protobuf::int32 BmsMessage::bms_soc() const {
  return bms_soc_;
}
inline void BmsMessage::set_bms_soc(::google::protobuf::int32 value) {
  set_has_bms_soc();
  bms_soc_ = value;
}

// optional int32 BMS_FULL_SOC = 3;
inline bool BmsMessage::has_bms_full_soc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BmsMessage::set_has_bms_full_soc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BmsMessage::clear_has_bms_full_soc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BmsMessage::clear_bms_full_soc() {
  bms_full_soc_ = 0;
  clear_has_bms_full_soc();
}
inline ::google::protobuf::int32 BmsMessage::bms_full_soc() const {
  return bms_full_soc_;
}
inline void BmsMessage::set_bms_full_soc(::google::protobuf::int32 value) {
  set_has_bms_full_soc();
  bms_full_soc_ = value;
}

// optional float BMS_Voltage = 4;
inline bool BmsMessage::has_bms_voltage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BmsMessage::set_has_bms_voltage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BmsMessage::clear_has_bms_voltage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BmsMessage::clear_bms_voltage() {
  bms_voltage_ = 0;
  clear_has_bms_voltage();
}
inline float BmsMessage::bms_voltage() const {
  return bms_voltage_;
}
inline void BmsMessage::set_bms_voltage(float value) {
  set_has_bms_voltage();
  bms_voltage_ = value;
}

// optional float BMS_sys_Current = 5;
inline bool BmsMessage::has_bms_sys_current() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BmsMessage::set_has_bms_sys_current() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BmsMessage::clear_has_bms_sys_current() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BmsMessage::clear_bms_sys_current() {
  bms_sys_current_ = 0;
  clear_has_bms_sys_current();
}
inline float BmsMessage::bms_sys_current() const {
  return bms_sys_current_;
}
inline void BmsMessage::set_bms_sys_current(float value) {
  set_has_bms_sys_current();
  bms_sys_current_ = value;
}

// optional float BMS_motor_Current = 6;
inline bool BmsMessage::has_bms_motor_current() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BmsMessage::set_has_bms_motor_current() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BmsMessage::clear_has_bms_motor_current() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BmsMessage::clear_bms_motor_current() {
  bms_motor_current_ = 0;
  clear_has_bms_motor_current();
}
inline float BmsMessage::bms_motor_current() const {
  return bms_motor_current_;
}
inline void BmsMessage::set_bms_motor_current(float value) {
  set_has_bms_motor_current();
  bms_motor_current_ = value;
}

// optional float BMS_charg_Current = 7;
inline bool BmsMessage::has_bms_charg_current() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BmsMessage::set_has_bms_charg_current() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BmsMessage::clear_has_bms_charg_current() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BmsMessage::clear_bms_charg_current() {
  bms_charg_current_ = 0;
  clear_has_bms_charg_current();
}
inline float BmsMessage::bms_charg_current() const {
  return bms_charg_current_;
}
inline void BmsMessage::set_bms_charg_current(float value) {
  set_has_bms_charg_current();
  bms_charg_current_ = value;
}

// optional int32 BMS_board_temp = 8;
inline bool BmsMessage::has_bms_board_temp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BmsMessage::set_has_bms_board_temp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BmsMessage::clear_has_bms_board_temp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BmsMessage::clear_bms_board_temp() {
  bms_board_temp_ = 0;
  clear_has_bms_board_temp();
}
inline ::google::protobuf::int32 BmsMessage::bms_board_temp() const {
  return bms_board_temp_;
}
inline void BmsMessage::set_bms_board_temp(::google::protobuf::int32 value) {
  set_has_bms_board_temp();
  bms_board_temp_ = value;
}

// optional int32 BMS_battery_tempA = 9;
inline bool BmsMessage::has_bms_battery_tempa() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BmsMessage::set_has_bms_battery_tempa() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BmsMessage::clear_has_bms_battery_tempa() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BmsMessage::clear_bms_battery_tempa() {
  bms_battery_tempa_ = 0;
  clear_has_bms_battery_tempa();
}
inline ::google::protobuf::int32 BmsMessage::bms_battery_tempa() const {
  return bms_battery_tempa_;
}
inline void BmsMessage::set_bms_battery_tempa(::google::protobuf::int32 value) {
  set_has_bms_battery_tempa();
  bms_battery_tempa_ = value;
}

// optional int32 BMS_battery_tempB = 10;
inline bool BmsMessage::has_bms_battery_tempb() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BmsMessage::set_has_bms_battery_tempb() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BmsMessage::clear_has_bms_battery_tempb() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BmsMessage::clear_bms_battery_tempb() {
  bms_battery_tempb_ = 0;
  clear_has_bms_battery_tempb();
}
inline ::google::protobuf::int32 BmsMessage::bms_battery_tempb() const {
  return bms_battery_tempb_;
}
inline void BmsMessage::set_bms_battery_tempb(::google::protobuf::int32 value) {
  set_has_bms_battery_tempb();
  bms_battery_tempb_ = value;
}

// optional .BmsMessage.statusMessage statusMsg = 11;
inline bool BmsMessage::has_statusmsg() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BmsMessage::set_has_statusmsg() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BmsMessage::clear_has_statusmsg() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BmsMessage::clear_statusmsg() {
  if (statusmsg_ != NULL) statusmsg_->::BmsMessage_statusMessage::Clear();
  clear_has_statusmsg();
}
inline const ::BmsMessage_statusMessage& BmsMessage::statusmsg() const {
  return statusmsg_ != NULL ? *statusmsg_ : *default_instance_->statusmsg_;
}
inline ::BmsMessage_statusMessage* BmsMessage::mutable_statusmsg() {
  set_has_statusmsg();
  if (statusmsg_ == NULL) statusmsg_ = new ::BmsMessage_statusMessage;
  return statusmsg_;
}
inline ::BmsMessage_statusMessage* BmsMessage::release_statusmsg() {
  clear_has_statusmsg();
  ::BmsMessage_statusMessage* temp = statusmsg_;
  statusmsg_ = NULL;
  return temp;
}
inline void BmsMessage::set_allocated_statusmsg(::BmsMessage_statusMessage* statusmsg) {
  delete statusmsg_;
  statusmsg_ = statusmsg;
  if (statusmsg) {
    set_has_statusmsg();
  } else {
    clear_has_statusmsg();
  }
}

// optional .BmsMessage.alarmMessage alarmMsg = 12;
inline bool BmsMessage::has_alarmmsg() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BmsMessage::set_has_alarmmsg() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BmsMessage::clear_has_alarmmsg() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BmsMessage::clear_alarmmsg() {
  if (alarmmsg_ != NULL) alarmmsg_->::BmsMessage_alarmMessage::Clear();
  clear_has_alarmmsg();
}
inline const ::BmsMessage_alarmMessage& BmsMessage::alarmmsg() const {
  return alarmmsg_ != NULL ? *alarmmsg_ : *default_instance_->alarmmsg_;
}
inline ::BmsMessage_alarmMessage* BmsMessage::mutable_alarmmsg() {
  set_has_alarmmsg();
  if (alarmmsg_ == NULL) alarmmsg_ = new ::BmsMessage_alarmMessage;
  return alarmmsg_;
}
inline ::BmsMessage_alarmMessage* BmsMessage::release_alarmmsg() {
  clear_has_alarmmsg();
  ::BmsMessage_alarmMessage* temp = alarmmsg_;
  alarmmsg_ = NULL;
  return temp;
}
inline void BmsMessage::set_allocated_alarmmsg(::BmsMessage_alarmMessage* alarmmsg) {
  delete alarmmsg_;
  alarmmsg_ = alarmmsg;
  if (alarmmsg) {
    set_has_alarmmsg();
  } else {
    clear_has_alarmmsg();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BMSMessage_2eproto__INCLUDED
