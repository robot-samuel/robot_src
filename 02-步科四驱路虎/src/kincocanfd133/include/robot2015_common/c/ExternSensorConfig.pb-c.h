/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ExternSensorConfig.proto */

#ifndef PROTOBUF_C_ExternSensorConfig_2eproto__INCLUDED
#define PROTOBUF_C_ExternSensorConfig_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ExternSensorConfig ExternSensorConfig;
typedef struct _ExternSensorConfig__ConfigModeFan ExternSensorConfig__ConfigModeFan;


/* --- enums --- */


/* --- messages --- */

struct  _ExternSensorConfig__ConfigModeFan
{
  ProtobufCMessage base;
  /*
   *指明配置模块的ID
   */
  protobuf_c_boolean has_fan_id;
  int32_t fan_id;
  /*
   *自动手动切换  0-手动  1 自动
   */
  protobuf_c_boolean has_fan_enable;
  int32_t fan_enable;
  /*
   *风扇自动开启值
   */
  protobuf_c_boolean has_vaule_open;
  float vaule_open;
  /*
   *风扇自动关闭值
   */
  protobuf_c_boolean has_vaule_close;
  float vaule_close;
  /*
   *手动模式下的开关 0-开 1 关
   */
  protobuf_c_boolean has_ctrl_switch;
  float ctrl_switch;
};
#define EXTERN_SENSOR_CONFIG__CONFIG__MODE_FAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extern_sensor_config__config__mode_fan__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _ExternSensorConfig
{
  ProtobufCMessage base;
  /*
   *LED颜色 0 关闭 1-红常亮 2-绿常亮  3 -蓝常亮 4-红闪烁 5-绿闪烁 6 -蓝闪烁 
   */
  protobuf_c_boolean has_led_color;
  int32_t led_color;
  size_t n_config_fan_msg;
  ExternSensorConfig__ConfigModeFan **config_fan_msg;
};
#define EXTERN_SENSOR_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extern_sensor_config__descriptor) \
    , 0,0, 0,NULL }


/* ExternSensorConfig__ConfigModeFan methods */
void   extern_sensor_config__config__mode_fan__init
                     (ExternSensorConfig__ConfigModeFan         *message);
/* ExternSensorConfig methods */
void   extern_sensor_config__init
                     (ExternSensorConfig         *message);
size_t extern_sensor_config__get_packed_size
                     (const ExternSensorConfig   *message);
size_t extern_sensor_config__pack
                     (const ExternSensorConfig   *message,
                      uint8_t             *out);
size_t extern_sensor_config__pack_to_buffer
                     (const ExternSensorConfig   *message,
                      ProtobufCBuffer     *buffer);
ExternSensorConfig *
       extern_sensor_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   extern_sensor_config__free_unpacked
                     (ExternSensorConfig *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ExternSensorConfig__ConfigModeFan_Closure)
                 (const ExternSensorConfig__ConfigModeFan *message,
                  void *closure_data);
typedef void (*ExternSensorConfig_Closure)
                 (const ExternSensorConfig *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor extern_sensor_config__descriptor;
extern const ProtobufCMessageDescriptor extern_sensor_config__config__mode_fan__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ExternSensorConfig_2eproto__INCLUDED */
