/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_ExternSensorConfig_2eproto__INCLUDED
#define PROTOBUF_C_ExternSensorConfig_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _ExternSensorConfig ExternSensorConfig;
typedef struct _ExternSensorConfig__ConfigModeFan ExternSensorConfig__ConfigModeFan;


/* --- enums --- */


/* --- messages --- */

struct  _ExternSensorConfig__ConfigModeFan
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fan_id;
  int32_t fan_id;
  protobuf_c_boolean has_fan_enable;
  int32_t fan_enable;
  protobuf_c_boolean has_vaule_open;
  float vaule_open;
  protobuf_c_boolean has_vaule_close;
  float vaule_close;
  protobuf_c_boolean has_ctrl_switch;
  float ctrl_switch;
};
#define EXTERN_SENSOR_CONFIG__CONFIG__MODE_FAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extern_sensor_config__config__mode_fan__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _ExternSensorConfig
{
  ProtobufCMessage base;
  protobuf_c_boolean has_led_color;
  int32_t led_color;
  size_t n_config_fan_msg;
  ExternSensorConfig__ConfigModeFan **config_fan_msg;
  protobuf_c_boolean has_led_flight;
  int32_t led_flight;
};
#define EXTERN_SENSOR_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extern_sensor_config__descriptor) \
    , 0,0, 0,NULL, 0,0 }


/* ExternSensorConfig__ConfigModeFan methods */
void   extern_sensor_config__config__mode_fan__init
                     (ExternSensorConfig__ConfigModeFan         *message);
/* ExternSensorConfig methods */
void   extern_sensor_config__init
                     (ExternSensorConfig         *message);
size_t extern_sensor_config__get_packed_size
                     (const ExternSensorConfig   *message);
size_t extern_sensor_config__pack
                     (const ExternSensorConfig   *message,
                      uint8_t             *out);
size_t extern_sensor_config__pack_to_buffer
                     (const ExternSensorConfig   *message,
                      ProtobufCBuffer     *buffer);
ExternSensorConfig *
       extern_sensor_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   extern_sensor_config__free_unpacked
                     (ExternSensorConfig *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ExternSensorConfig__ConfigModeFan_Closure)
                 (const ExternSensorConfig__ConfigModeFan *message,
                  void *closure_data);
typedef void (*ExternSensorConfig_Closure)
                 (const ExternSensorConfig *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor extern_sensor_config__descriptor;
extern const ProtobufCMessageDescriptor extern_sensor_config__config__mode_fan__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_ExternSensorConfig_2eproto__INCLUDED */
