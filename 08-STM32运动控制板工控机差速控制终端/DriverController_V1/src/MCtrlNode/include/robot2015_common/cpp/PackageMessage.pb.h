// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PackageMessage.proto

#ifndef PROTOBUF_INCLUDED_PackageMessage_2eproto
#define PROTOBUF_INCLUDED_PackageMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_PackageMessage_2eproto 

namespace protobuf_PackageMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_PackageMessage_2eproto
class PackageMessage;
class PackageMessageDefaultTypeInternal;
extern PackageMessageDefaultTypeInternal _PackageMessage_default_instance_;
class PackageMessage_Call;
class PackageMessage_CallDefaultTypeInternal;
extern PackageMessage_CallDefaultTypeInternal _PackageMessage_Call_default_instance_;
class PackageMessage_Result;
class PackageMessage_ResultDefaultTypeInternal;
extern PackageMessage_ResultDefaultTypeInternal _PackageMessage_Result_default_instance_;
namespace google {
namespace protobuf {
template<> ::PackageMessage* Arena::CreateMaybeMessage<::PackageMessage>(Arena*);
template<> ::PackageMessage_Call* Arena::CreateMaybeMessage<::PackageMessage_Call>(Arena*);
template<> ::PackageMessage_Result* Arena::CreateMaybeMessage<::PackageMessage_Result>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class PackageMessage_Call : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PackageMessage.Call) */ {
 public:
  PackageMessage_Call();
  virtual ~PackageMessage_Call();

  PackageMessage_Call(const PackageMessage_Call& from);

  inline PackageMessage_Call& operator=(const PackageMessage_Call& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PackageMessage_Call(PackageMessage_Call&& from) noexcept
    : PackageMessage_Call() {
    *this = ::std::move(from);
  }

  inline PackageMessage_Call& operator=(PackageMessage_Call&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PackageMessage_Call& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageMessage_Call* internal_default_instance() {
    return reinterpret_cast<const PackageMessage_Call*>(
               &_PackageMessage_Call_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PackageMessage_Call* other);
  friend void swap(PackageMessage_Call& a, PackageMessage_Call& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PackageMessage_Call* New() const final {
    return CreateMaybeMessage<PackageMessage_Call>(NULL);
  }

  PackageMessage_Call* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PackageMessage_Call>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PackageMessage_Call& from);
  void MergeFrom(const PackageMessage_Call& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PackageMessage_Call* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes Parameters = 3;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 3;
  const ::std::string& parameters(int index) const;
  ::std::string* mutable_parameters(int index);
  void set_parameters(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_parameters(int index, ::std::string&& value);
  #endif
  void set_parameters(int index, const char* value);
  void set_parameters(int index, const void* value, size_t size);
  ::std::string* add_parameters();
  void add_parameters(const ::std::string& value);
  #if LANG_CXX11
  void add_parameters(::std::string&& value);
  #endif
  void add_parameters(const char* value);
  void add_parameters(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& parameters() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_parameters();

  // string Service = 1;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  #if LANG_CXX11
  void set_service(::std::string&& value);
  #endif
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // string Function = 2;
  void clear_function();
  static const int kFunctionFieldNumber = 2;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  #if LANG_CXX11
  void set_function(::std::string&& value);
  #endif
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // @@protoc_insertion_point(class_scope:PackageMessage.Call)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> parameters_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PackageMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PackageMessage_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PackageMessage.Result) */ {
 public:
  PackageMessage_Result();
  virtual ~PackageMessage_Result();

  PackageMessage_Result(const PackageMessage_Result& from);

  inline PackageMessage_Result& operator=(const PackageMessage_Result& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PackageMessage_Result(PackageMessage_Result&& from) noexcept
    : PackageMessage_Result() {
    *this = ::std::move(from);
  }

  inline PackageMessage_Result& operator=(PackageMessage_Result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PackageMessage_Result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageMessage_Result* internal_default_instance() {
    return reinterpret_cast<const PackageMessage_Result*>(
               &_PackageMessage_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PackageMessage_Result* other);
  friend void swap(PackageMessage_Result& a, PackageMessage_Result& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PackageMessage_Result* New() const final {
    return CreateMaybeMessage<PackageMessage_Result>(NULL);
  }

  PackageMessage_Result* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PackageMessage_Result>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PackageMessage_Result& from);
  void MergeFrom(const PackageMessage_Result& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PackageMessage_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ResultData = 2;
  void clear_resultdata();
  static const int kResultDataFieldNumber = 2;
  const ::std::string& resultdata() const;
  void set_resultdata(const ::std::string& value);
  #if LANG_CXX11
  void set_resultdata(::std::string&& value);
  #endif
  void set_resultdata(const char* value);
  void set_resultdata(const void* value, size_t size);
  ::std::string* mutable_resultdata();
  ::std::string* release_resultdata();
  void set_allocated_resultdata(::std::string* resultdata);

  // int32 ErrorCode = 1;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PackageMessage.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr resultdata_;
  ::google::protobuf::int32 errorcode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PackageMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PackageMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PackageMessage) */ {
 public:
  PackageMessage();
  virtual ~PackageMessage();

  PackageMessage(const PackageMessage& from);

  inline PackageMessage& operator=(const PackageMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PackageMessage(PackageMessage&& from) noexcept
    : PackageMessage() {
    *this = ::std::move(from);
  }

  inline PackageMessage& operator=(PackageMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PackageMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageMessage* internal_default_instance() {
    return reinterpret_cast<const PackageMessage*>(
               &_PackageMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PackageMessage* other);
  friend void swap(PackageMessage& a, PackageMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PackageMessage* New() const final {
    return CreateMaybeMessage<PackageMessage>(NULL);
  }

  PackageMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PackageMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PackageMessage& from);
  void MergeFrom(const PackageMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PackageMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PackageMessage_Call Call;
  typedef PackageMessage_Result Result;

  // accessors -------------------------------------------------------

  // string Token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string SessionId = 2;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 2;
  const ::std::string& sessionid() const;
  void set_sessionid(const ::std::string& value);
  #if LANG_CXX11
  void set_sessionid(::std::string&& value);
  #endif
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  ::std::string* mutable_sessionid();
  ::std::string* release_sessionid();
  void set_allocated_sessionid(::std::string* sessionid);

  // string From = 4;
  void clear_from();
  static const int kFromFieldNumber = 4;
  const ::std::string& from() const;
  void set_from(const ::std::string& value);
  #if LANG_CXX11
  void set_from(::std::string&& value);
  #endif
  void set_from(const char* value);
  void set_from(const char* value, size_t size);
  ::std::string* mutable_from();
  ::std::string* release_from();
  void set_allocated_from(::std::string* from);

  // string To = 5;
  void clear_to();
  static const int kToFieldNumber = 5;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  #if LANG_CXX11
  void set_to(::std::string&& value);
  #endif
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // string robotID = 8;
  void clear_robotid();
  static const int kRobotIDFieldNumber = 8;
  const ::std::string& robotid() const;
  void set_robotid(const ::std::string& value);
  #if LANG_CXX11
  void set_robotid(::std::string&& value);
  #endif
  void set_robotid(const char* value);
  void set_robotid(const char* value, size_t size);
  ::std::string* mutable_robotid();
  ::std::string* release_robotid();
  void set_allocated_robotid(::std::string* robotid);

  // .PackageMessage.Call CallMessage = 6;
  bool has_callmessage() const;
  void clear_callmessage();
  static const int kCallMessageFieldNumber = 6;
  private:
  const ::PackageMessage_Call& _internal_callmessage() const;
  public:
  const ::PackageMessage_Call& callmessage() const;
  ::PackageMessage_Call* release_callmessage();
  ::PackageMessage_Call* mutable_callmessage();
  void set_allocated_callmessage(::PackageMessage_Call* callmessage);

  // .PackageMessage.Result ResultMessage = 7;
  bool has_resultmessage() const;
  void clear_resultmessage();
  static const int kResultMessageFieldNumber = 7;
  private:
  const ::PackageMessage_Result& _internal_resultmessage() const;
  public:
  const ::PackageMessage_Result& resultmessage() const;
  ::PackageMessage_Result* release_resultmessage();
  ::PackageMessage_Result* mutable_resultmessage();
  void set_allocated_resultmessage(::PackageMessage_Result* resultmessage);

  // int64 Time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PackageMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr sessionid_;
  ::google::protobuf::internal::ArenaStringPtr from_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr robotid_;
  ::PackageMessage_Call* callmessage_;
  ::PackageMessage_Result* resultmessage_;
  ::google::protobuf::int64 time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PackageMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PackageMessage_Call

// string Service = 1;
inline void PackageMessage_Call::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PackageMessage_Call::service() const {
  // @@protoc_insertion_point(field_get:PackageMessage.Call.Service)
  return service_.GetNoArena();
}
inline void PackageMessage_Call::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PackageMessage.Call.Service)
}
#if LANG_CXX11
inline void PackageMessage_Call::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PackageMessage.Call.Service)
}
#endif
inline void PackageMessage_Call::set_service(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PackageMessage.Call.Service)
}
inline void PackageMessage_Call::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PackageMessage.Call.Service)
}
inline ::std::string* PackageMessage_Call::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:PackageMessage.Call.Service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackageMessage_Call::release_service() {
  // @@protoc_insertion_point(field_release:PackageMessage.Call.Service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackageMessage_Call::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.Call.Service)
}

// string Function = 2;
inline void PackageMessage_Call::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PackageMessage_Call::function() const {
  // @@protoc_insertion_point(field_get:PackageMessage.Call.Function)
  return function_.GetNoArena();
}
inline void PackageMessage_Call::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PackageMessage.Call.Function)
}
#if LANG_CXX11
inline void PackageMessage_Call::set_function(::std::string&& value) {
  
  function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PackageMessage.Call.Function)
}
#endif
inline void PackageMessage_Call::set_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PackageMessage.Call.Function)
}
inline void PackageMessage_Call::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PackageMessage.Call.Function)
}
inline ::std::string* PackageMessage_Call::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:PackageMessage.Call.Function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackageMessage_Call::release_function() {
  // @@protoc_insertion_point(field_release:PackageMessage.Call.Function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackageMessage_Call::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.Call.Function)
}

// repeated bytes Parameters = 3;
inline int PackageMessage_Call::parameters_size() const {
  return parameters_.size();
}
inline void PackageMessage_Call::clear_parameters() {
  parameters_.Clear();
}
inline const ::std::string& PackageMessage_Call::parameters(int index) const {
  // @@protoc_insertion_point(field_get:PackageMessage.Call.Parameters)
  return parameters_.Get(index);
}
inline ::std::string* PackageMessage_Call::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:PackageMessage.Call.Parameters)
  return parameters_.Mutable(index);
}
inline void PackageMessage_Call::set_parameters(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PackageMessage.Call.Parameters)
  parameters_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PackageMessage_Call::set_parameters(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:PackageMessage.Call.Parameters)
  parameters_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PackageMessage_Call::set_parameters(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  parameters_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PackageMessage.Call.Parameters)
}
inline void PackageMessage_Call::set_parameters(int index, const void* value, size_t size) {
  parameters_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PackageMessage.Call.Parameters)
}
inline ::std::string* PackageMessage_Call::add_parameters() {
  // @@protoc_insertion_point(field_add_mutable:PackageMessage.Call.Parameters)
  return parameters_.Add();
}
inline void PackageMessage_Call::add_parameters(const ::std::string& value) {
  parameters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PackageMessage.Call.Parameters)
}
#if LANG_CXX11
inline void PackageMessage_Call::add_parameters(::std::string&& value) {
  parameters_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:PackageMessage.Call.Parameters)
}
#endif
inline void PackageMessage_Call::add_parameters(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  parameters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PackageMessage.Call.Parameters)
}
inline void PackageMessage_Call::add_parameters(const void* value, size_t size) {
  parameters_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PackageMessage.Call.Parameters)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PackageMessage_Call::parameters() const {
  // @@protoc_insertion_point(field_list:PackageMessage.Call.Parameters)
  return parameters_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PackageMessage_Call::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:PackageMessage.Call.Parameters)
  return &parameters_;
}

// -------------------------------------------------------------------

// PackageMessage_Result

// int32 ErrorCode = 1;
inline void PackageMessage_Result::clear_errorcode() {
  errorcode_ = 0;
}
inline ::google::protobuf::int32 PackageMessage_Result::errorcode() const {
  // @@protoc_insertion_point(field_get:PackageMessage.Result.ErrorCode)
  return errorcode_;
}
inline void PackageMessage_Result::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:PackageMessage.Result.ErrorCode)
}

// bytes ResultData = 2;
inline void PackageMessage_Result::clear_resultdata() {
  resultdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PackageMessage_Result::resultdata() const {
  // @@protoc_insertion_point(field_get:PackageMessage.Result.ResultData)
  return resultdata_.GetNoArena();
}
inline void PackageMessage_Result::set_resultdata(const ::std::string& value) {
  
  resultdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PackageMessage.Result.ResultData)
}
#if LANG_CXX11
inline void PackageMessage_Result::set_resultdata(::std::string&& value) {
  
  resultdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PackageMessage.Result.ResultData)
}
#endif
inline void PackageMessage_Result::set_resultdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resultdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PackageMessage.Result.ResultData)
}
inline void PackageMessage_Result::set_resultdata(const void* value, size_t size) {
  
  resultdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PackageMessage.Result.ResultData)
}
inline ::std::string* PackageMessage_Result::mutable_resultdata() {
  
  // @@protoc_insertion_point(field_mutable:PackageMessage.Result.ResultData)
  return resultdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackageMessage_Result::release_resultdata() {
  // @@protoc_insertion_point(field_release:PackageMessage.Result.ResultData)
  
  return resultdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackageMessage_Result::set_allocated_resultdata(::std::string* resultdata) {
  if (resultdata != NULL) {
    
  } else {
    
  }
  resultdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resultdata);
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.Result.ResultData)
}

// -------------------------------------------------------------------

// PackageMessage

// string Token = 1;
inline void PackageMessage::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PackageMessage::token() const {
  // @@protoc_insertion_point(field_get:PackageMessage.Token)
  return token_.GetNoArena();
}
inline void PackageMessage::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PackageMessage.Token)
}
#if LANG_CXX11
inline void PackageMessage::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PackageMessage.Token)
}
#endif
inline void PackageMessage::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PackageMessage.Token)
}
inline void PackageMessage::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PackageMessage.Token)
}
inline ::std::string* PackageMessage::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:PackageMessage.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackageMessage::release_token() {
  // @@protoc_insertion_point(field_release:PackageMessage.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackageMessage::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.Token)
}

// string SessionId = 2;
inline void PackageMessage::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PackageMessage::sessionid() const {
  // @@protoc_insertion_point(field_get:PackageMessage.SessionId)
  return sessionid_.GetNoArena();
}
inline void PackageMessage::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PackageMessage.SessionId)
}
#if LANG_CXX11
inline void PackageMessage::set_sessionid(::std::string&& value) {
  
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PackageMessage.SessionId)
}
#endif
inline void PackageMessage::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PackageMessage.SessionId)
}
inline void PackageMessage::set_sessionid(const char* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PackageMessage.SessionId)
}
inline ::std::string* PackageMessage::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:PackageMessage.SessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackageMessage::release_sessionid() {
  // @@protoc_insertion_point(field_release:PackageMessage.SessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackageMessage::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.SessionId)
}

// int64 Time = 3;
inline void PackageMessage::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PackageMessage::time() const {
  // @@protoc_insertion_point(field_get:PackageMessage.Time)
  return time_;
}
inline void PackageMessage::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:PackageMessage.Time)
}

// string From = 4;
inline void PackageMessage::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PackageMessage::from() const {
  // @@protoc_insertion_point(field_get:PackageMessage.From)
  return from_.GetNoArena();
}
inline void PackageMessage::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PackageMessage.From)
}
#if LANG_CXX11
inline void PackageMessage::set_from(::std::string&& value) {
  
  from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PackageMessage.From)
}
#endif
inline void PackageMessage::set_from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PackageMessage.From)
}
inline void PackageMessage::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PackageMessage.From)
}
inline ::std::string* PackageMessage::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:PackageMessage.From)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackageMessage::release_from() {
  // @@protoc_insertion_point(field_release:PackageMessage.From)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackageMessage::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.From)
}

// string To = 5;
inline void PackageMessage::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PackageMessage::to() const {
  // @@protoc_insertion_point(field_get:PackageMessage.To)
  return to_.GetNoArena();
}
inline void PackageMessage::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PackageMessage.To)
}
#if LANG_CXX11
inline void PackageMessage::set_to(::std::string&& value) {
  
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PackageMessage.To)
}
#endif
inline void PackageMessage::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PackageMessage.To)
}
inline void PackageMessage::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PackageMessage.To)
}
inline ::std::string* PackageMessage::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:PackageMessage.To)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackageMessage::release_to() {
  // @@protoc_insertion_point(field_release:PackageMessage.To)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackageMessage::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.To)
}

// .PackageMessage.Call CallMessage = 6;
inline bool PackageMessage::has_callmessage() const {
  return this != internal_default_instance() && callmessage_ != NULL;
}
inline void PackageMessage::clear_callmessage() {
  if (GetArenaNoVirtual() == NULL && callmessage_ != NULL) {
    delete callmessage_;
  }
  callmessage_ = NULL;
}
inline const ::PackageMessage_Call& PackageMessage::_internal_callmessage() const {
  return *callmessage_;
}
inline const ::PackageMessage_Call& PackageMessage::callmessage() const {
  const ::PackageMessage_Call* p = callmessage_;
  // @@protoc_insertion_point(field_get:PackageMessage.CallMessage)
  return p != NULL ? *p : *reinterpret_cast<const ::PackageMessage_Call*>(
      &::_PackageMessage_Call_default_instance_);
}
inline ::PackageMessage_Call* PackageMessage::release_callmessage() {
  // @@protoc_insertion_point(field_release:PackageMessage.CallMessage)
  
  ::PackageMessage_Call* temp = callmessage_;
  callmessage_ = NULL;
  return temp;
}
inline ::PackageMessage_Call* PackageMessage::mutable_callmessage() {
  
  if (callmessage_ == NULL) {
    auto* p = CreateMaybeMessage<::PackageMessage_Call>(GetArenaNoVirtual());
    callmessage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PackageMessage.CallMessage)
  return callmessage_;
}
inline void PackageMessage::set_allocated_callmessage(::PackageMessage_Call* callmessage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete callmessage_;
  }
  if (callmessage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      callmessage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, callmessage, submessage_arena);
    }
    
  } else {
    
  }
  callmessage_ = callmessage;
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.CallMessage)
}

// .PackageMessage.Result ResultMessage = 7;
inline bool PackageMessage::has_resultmessage() const {
  return this != internal_default_instance() && resultmessage_ != NULL;
}
inline void PackageMessage::clear_resultmessage() {
  if (GetArenaNoVirtual() == NULL && resultmessage_ != NULL) {
    delete resultmessage_;
  }
  resultmessage_ = NULL;
}
inline const ::PackageMessage_Result& PackageMessage::_internal_resultmessage() const {
  return *resultmessage_;
}
inline const ::PackageMessage_Result& PackageMessage::resultmessage() const {
  const ::PackageMessage_Result* p = resultmessage_;
  // @@protoc_insertion_point(field_get:PackageMessage.ResultMessage)
  return p != NULL ? *p : *reinterpret_cast<const ::PackageMessage_Result*>(
      &::_PackageMessage_Result_default_instance_);
}
inline ::PackageMessage_Result* PackageMessage::release_resultmessage() {
  // @@protoc_insertion_point(field_release:PackageMessage.ResultMessage)
  
  ::PackageMessage_Result* temp = resultmessage_;
  resultmessage_ = NULL;
  return temp;
}
inline ::PackageMessage_Result* PackageMessage::mutable_resultmessage() {
  
  if (resultmessage_ == NULL) {
    auto* p = CreateMaybeMessage<::PackageMessage_Result>(GetArenaNoVirtual());
    resultmessage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PackageMessage.ResultMessage)
  return resultmessage_;
}
inline void PackageMessage::set_allocated_resultmessage(::PackageMessage_Result* resultmessage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resultmessage_;
  }
  if (resultmessage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resultmessage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resultmessage, submessage_arena);
    }
    
  } else {
    
  }
  resultmessage_ = resultmessage;
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.ResultMessage)
}

// string robotID = 8;
inline void PackageMessage::clear_robotid() {
  robotid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PackageMessage::robotid() const {
  // @@protoc_insertion_point(field_get:PackageMessage.robotID)
  return robotid_.GetNoArena();
}
inline void PackageMessage::set_robotid(const ::std::string& value) {
  
  robotid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PackageMessage.robotID)
}
#if LANG_CXX11
inline void PackageMessage::set_robotid(::std::string&& value) {
  
  robotid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PackageMessage.robotID)
}
#endif
inline void PackageMessage::set_robotid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robotid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PackageMessage.robotID)
}
inline void PackageMessage::set_robotid(const char* value, size_t size) {
  
  robotid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PackageMessage.robotID)
}
inline ::std::string* PackageMessage::mutable_robotid() {
  
  // @@protoc_insertion_point(field_mutable:PackageMessage.robotID)
  return robotid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackageMessage::release_robotid() {
  // @@protoc_insertion_point(field_release:PackageMessage.robotID)
  
  return robotid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackageMessage::set_allocated_robotid(::std::string* robotid) {
  if (robotid != NULL) {
    
  } else {
    
  }
  robotid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robotid);
  // @@protoc_insertion_point(field_set_allocated:PackageMessage.robotID)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_PackageMessage_2eproto
